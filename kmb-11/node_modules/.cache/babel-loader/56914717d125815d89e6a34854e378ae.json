{"ast":null,"code":"import _objectSpread from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport React from 'react';\nimport avatar from \"../Components/Profile/img/avatar.jpg\";\nvar initialStateForPost = {\n  messageArray: [{\n    avatar: avatar,\n    post: \"Эй, почему никто не лайкнул в прошлом посте?!\"\n  }, {\n    avatar: avatar,\n    post: \"Ну что?! Давайте лайкать теперь этот пост.\"\n  }],\n  currentPost: ''\n};\nvar ADD_POST = 'NETWORK/PROFILE/CREATE_POSTS/ADD_POST';\nvar CHANGE_NEW_POST = 'NETWORK/PROFILE/CREATE_POSTS/CHANGE_NEW_POST';\n\nvar addPostReducer = function addPostReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateForPost;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  var stateCopy = _objectSpread({}, state, {\n    messageArray: state.messageArray.map(function (objEl) {\n      return _objectSpread({}, objEl);\n    })\n  });\n\n  switch (action.type) {\n    case ADD_POST:\n      stateCopy.messageArray.push({\n        avatar: avatar,\n        post: state.currentPost\n      });\n      stateCopy.currentPost = \"\";\n      return stateCopy;\n\n    case CHANGE_NEW_POST:\n      stateCopy.currentPost = action.newPost;\n      return stateCopy;\n\n    default:\n      return state;\n  }\n};\n\nexport var changeCurrentPost = function changeCurrentPost(currentText) {\n  return {\n    type: CHANGE_NEW_POST,\n    newPost: currentText\n  };\n};\nexport var addPost = function addPost() {\n  return {\n    type: ADD_POST\n  };\n};\nexport default addPostReducer;","map":{"version":3,"sources":["C:\\lessons\\React\\kmb-11\\src\\Reducers\\addPostReducer.js"],"names":["React","avatar","initialStateForPost","messageArray","post","currentPost","ADD_POST","CHANGE_NEW_POST","addPostReducer","state","action","stateCopy","map","objEl","type","push","newPost","changeCurrentPost","currentText","addPost"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AAEA,IAAIC,mBAAmB,GAAG;AACtBC,EAAAA,YAAY,EAAE,CACV;AAACF,IAAAA,MAAM,EAAEA,MAAT;AAAiBG,IAAAA,IAAI,EAAE;AAAvB,GADU,EAEV;AAACH,IAAAA,MAAM,EAAEA,MAAT;AAAiBG,IAAAA,IAAI,EAAE;AAAvB,GAFU,CADQ;AAKtBC,EAAAA,WAAW,EAAE;AALS,CAA1B;AAQA,IAAMC,QAAQ,GAAG,uCAAjB;AACA,IAAMC,eAAe,GAAG,8CAAxB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAyC;AAAA,MAAxCC,KAAwC,uEAAhCP,mBAAgC;AAAA,MAAXQ,MAAW;;AAC5D,MAAIC,SAAS,qBACNF,KADM;AAETN,IAAAA,YAAY,EAAEM,KAAK,CAACN,YAAN,CAAmBS,GAAnB,CAAuB,UAACC,KAAD;AAAA,+BAC7BA,KAD6B;AAAA,KAAvB;AAFL,IAAb;;AAMA,UAAQH,MAAM,CAACI,IAAf;AACI,SAAKR,QAAL;AACIK,MAAAA,SAAS,CAACR,YAAV,CAAuBY,IAAvB,CAA4B;AAACd,QAAAA,MAAM,EAAEA,MAAT;AAAiBG,QAAAA,IAAI,EAAEK,KAAK,CAACJ;AAA7B,OAA5B;AACAM,MAAAA,SAAS,CAACN,WAAV,GAAwB,EAAxB;AACA,aAAOM,SAAP;;AACJ,SAAKJ,eAAL;AACII,MAAAA,SAAS,CAACN,WAAV,GAAwBK,MAAM,CAACM,OAA/B;AACA,aAAOL,SAAP;;AACJ;AACI,aAAOF,KAAP;AATR;AAWH,CAlBD;;AAoBA,OAAO,IAAMQ,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,WAAD,EAAiB;AAC9C,SAAO;AACHJ,IAAAA,IAAI,EAAEP,eADH;AAEHS,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH,CALM;AAMP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACzB,SAAO;AACHL,IAAAA,IAAI,EAAER;AADH,GAAP;AAGH,CAJM;AAMP,eAAeE,cAAf","sourcesContent":["import React from 'react';\nimport avatar from \"../Components/Profile/img/avatar.jpg\";\n\nlet initialStateForPost = {\n    messageArray: [\n        {avatar: avatar, post: \"Эй, почему никто не лайкнул в прошлом посте?!\"},\n        {avatar: avatar, post: \"Ну что?! Давайте лайкать теперь этот пост.\"}\n    ],\n    currentPost: ''\n};\n\nconst ADD_POST = 'NETWORK/PROFILE/CREATE_POSTS/ADD_POST';\nconst CHANGE_NEW_POST = 'NETWORK/PROFILE/CREATE_POSTS/CHANGE_NEW_POST';\n\nconst addPostReducer = (state = initialStateForPost, action) => {\n    let stateCopy = {\n        ...state,\n        messageArray: state.messageArray.map((objEl) => (\n            {...objEl}\n        ))\n    };\n    switch (action.type) {\n        case ADD_POST:\n            stateCopy.messageArray.push({avatar: avatar, post: state.currentPost});\n            stateCopy.currentPost = \"\";\n            return stateCopy;\n        case CHANGE_NEW_POST:\n            stateCopy.currentPost = action.newPost;\n            return stateCopy;\n        default:\n            return state;\n    }\n};\n\nexport const changeCurrentPost = (currentText) => {\n    return {\n        type: CHANGE_NEW_POST,\n        newPost: currentText\n    }\n};\nexport const addPost = () => {\n    return {\n        type: ADD_POST\n    }\n};\n\nexport default addPostReducer;\n"]},"metadata":{},"sourceType":"module"}