{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport React from 'react';\nimport avatar from \"../Components/Profile/img/avatar.jpg\";\nimport axios from \"../Dall/axios-instance\";\nimport { profileService } from \"../Dall/profile-service\";\nvar initialStateForProfile = {\n  // users: [\n  //     {\n  //         avatar: avatar,\n  //         firstName: 'Иван',\n  //         secondName: 'Стечкин',\n  //         birthday: '12 января 1990',\n  //         city: 'Минск',\n  //         education: 'ВКА им. Можайского',\n  //         site: 'it-kamasutra.com',\n  //         status: null,\n  //         id: null\n  //     }\n  // ],\n  aboutMe: \"Информация не указана\",\n  contacts: {\n    skype: \"skype\",\n    vk: \"vk.com\",\n    facebook: \"facebook\",\n    icq: \"icq\",\n    email: \"email\",\n    googlePlus: \"gogep\",\n    twitter: \"twitter\",\n    instagram: \"instagra\",\n    whatsApp: \"watsap\"\n  },\n  status: \"У вас нет статуса\",\n  lookingForAJob: false,\n  lookingForAJobDescription: 'Ищу работу, знаю это это и это',\n  fullName: null,\n  statusChangeFlag: false,\n  currentStatus: \"\"\n};\nvar SET_STATUS = 'NETWORK/PROFILE/SET_STATUS';\nvar GET_PROFILE_INFORMATION = 'NETWORK/PROFILE/GET_PROFILE_INFORMATION';\nvar CHANGE_STATUS = 'NETWORK/PROFILE/CHANGE_STATUS';\nvar ADD_CURRENT_STATUS_TEXT = 'NETWORK/PROFILE/ADD_CURRENT_STATUS_TEXT';\n\nvar profilePageReducer = function profilePageReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateForProfile;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  var stateCopy = _objectSpread({}, state);\n\n  stateCopy.contacts = _objectSpread({}, state.contacts);\n\n  switch (action.type) {\n    case SET_STATUS:\n      stateCopy.status = action.status;\n      stateCopy.currentStatus = action.status;\n      return stateCopy;\n\n    case CHANGE_STATUS:\n      stateCopy.statusChangeFlag = action.flag;\n      return stateCopy;\n\n    case ADD_CURRENT_STATUS_TEXT:\n      stateCopy.currentStatus = action.textareaObject.target.value;\n      return stateCopy;\n\n    case GET_PROFILE_INFORMATION:\n      stateCopy.aboutMe = action.data.aboutMe;\n      stateCopy.contacts = _objectSpread({}, action.data.contacts);\n      stateCopy.lookingForAJob = action.data.lookingForAJob;\n      stateCopy.fullName = action.data.fullName;\n      return stateCopy;\n\n    default:\n      return state;\n  }\n}; //Thunks\n\n\nexport var getStatusThunk = function getStatusThunk() {\n  return function (dispatch, getState) {\n    var state = getState();\n    var userId = state.auth.userInfo.userId;\n    axios.get(\"profile/status/\".concat(userId)).then(function (result) {\n      dispatch(setStatus(result.data));\n    });\n  };\n};\nexport var addNewStatusThunk = function addNewStatusThunk() {\n  return function (dispatch, getState) {\n    var state = getState();\n    axios.put('profile/status', {\n      status: state.profileData.currentStatus\n    }).then(function () {\n      dispatch(changeStatusCreator(false));\n      dispatch(getStatusThunk());\n    });\n  };\n};\nexport var getProfileInformationThunk = function getProfileInformationThunk() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var state, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                state = getState();\n                _context.next = 3;\n                return profileService.getProfileInformation(state.auth.userInfo.userId);\n\n              case 3:\n                data = _context.sent;\n                dispatch(getProfileInformationCreator(data));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}; //action creators\n\nvar setStatus = function setStatus(statusFromServer) {\n  return {\n    type: SET_STATUS,\n    status: statusFromServer\n  };\n};\n\nexport var changeStatusCreator = function changeStatusCreator(flag) {\n  return {\n    type: CHANGE_STATUS,\n    flag: flag\n  };\n};\nexport var addCurrentStatusTextCreator = function addCurrentStatusTextCreator(e) {\n  return {\n    type: ADD_CURRENT_STATUS_TEXT,\n    textareaObject: e\n  };\n};\n\nvar getProfileInformationCreator = function getProfileInformationCreator(dataFromServer) {\n  return {\n    type: GET_PROFILE_INFORMATION,\n    data: dataFromServer\n  };\n};\n\nexport default profilePageReducer;","map":{"version":3,"sources":["C:\\lessons\\React\\kmb-11\\src\\Reducers\\profilePageReducer.js"],"names":["React","avatar","axios","profileService","initialStateForProfile","aboutMe","contacts","skype","vk","facebook","icq","email","googlePlus","twitter","instagram","whatsApp","status","lookingForAJob","lookingForAJobDescription","fullName","statusChangeFlag","currentStatus","SET_STATUS","GET_PROFILE_INFORMATION","CHANGE_STATUS","ADD_CURRENT_STATUS_TEXT","profilePageReducer","state","action","stateCopy","type","flag","textareaObject","target","value","data","getStatusThunk","dispatch","getState","userId","auth","userInfo","get","then","result","setStatus","addNewStatusThunk","put","profileData","changeStatusCreator","getProfileInformationThunk","getProfileInformation","getProfileInformationCreator","statusFromServer","addCurrentStatusTextCreator","e","dataFromServer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport avatar from \"../Components/Profile/img/avatar.jpg\";\nimport axios from \"../Dall/axios-instance\";\nimport {profileService} from \"../Dall/profile-service\";\n\nlet initialStateForProfile = {\n    // users: [\n    //     {\n    //         avatar: avatar,\n    //         firstName: 'Иван',\n    //         secondName: 'Стечкин',\n    //         birthday: '12 января 1990',\n    //         city: 'Минск',\n    //         education: 'ВКА им. Можайского',\n    //         site: 'it-kamasutra.com',\n    //         status: null,\n    //         id: null\n    //     }\n    // ],\n\n    aboutMe: \"Информация не указана\",\n    contacts: {\n        skype: \"skype\",\n        vk: \"vk.com\",\n        facebook: \"facebook\",\n        icq: \"icq\",\n        email: \"email\",\n        googlePlus: \"gogep\",\n        twitter: \"twitter\",\n        instagram: \"instagra\",\n        whatsApp: \"watsap\"\n    },\n    status: \"У вас нет статуса\",\n    lookingForAJob: false,\n    lookingForAJobDescription: 'Ищу работу, знаю это это и это',\n    fullName: null,\n    statusChangeFlag: false,\n    currentStatus: \"\"\n};\n\nconst SET_STATUS = 'NETWORK/PROFILE/SET_STATUS';\nconst GET_PROFILE_INFORMATION = 'NETWORK/PROFILE/GET_PROFILE_INFORMATION';\nconst CHANGE_STATUS = 'NETWORK/PROFILE/CHANGE_STATUS';\nconst ADD_CURRENT_STATUS_TEXT = 'NETWORK/PROFILE/ADD_CURRENT_STATUS_TEXT';\n\nconst profilePageReducer = (state = initialStateForProfile, action) => {\n    let stateCopy = {...state};\n    stateCopy.contacts = {...state.contacts};\n    switch (action.type) {\n        case SET_STATUS:\n            stateCopy.status = action.status\n            stateCopy.currentStatus = action.status\n            return stateCopy\n        case CHANGE_STATUS:\n            stateCopy.statusChangeFlag = action.flag\n            return stateCopy\n        case ADD_CURRENT_STATUS_TEXT:\n            stateCopy.currentStatus = action.textareaObject.target.value\n            return stateCopy\n        case GET_PROFILE_INFORMATION:\n            stateCopy.aboutMe = action.data.aboutMe\n            stateCopy.contacts = {...action.data.contacts}\n            stateCopy.lookingForAJob = action.data.lookingForAJob\n            stateCopy.fullName = action.data.fullName\n            return stateCopy\n        default:\n            return state;\n    }\n};\n\n//Thunks\n\nexport const getStatusThunk = () => {\n    return (dispatch, getState) => {\n        let state = getState();\n                let userId = state.auth.userInfo.userId;\n                axios.get(`profile/status/${userId}`).then(\n                    result => {\n                        dispatch(setStatus(result.data));\n                    }\n                )\n    }\n}\n\nexport const addNewStatusThunk = () => {\n    return (dispatch, getState) => {\n        let state = getState();\n        axios.put('profile/status', {status: state.profileData.currentStatus}).then(\n            () => {\n                dispatch(changeStatusCreator(false));\n                dispatch(getStatusThunk())\n            }\n        );\n    }\n}\n\nexport const getProfileInformationThunk = () => {\n    return async (dispatch, getState) => {\n        let state = getState()\n        let data = await profileService.getProfileInformation(state.auth.userInfo.userId)\n        dispatch(getProfileInformationCreator((data)))\n    }\n}\n\n//action creators\n\nconst setStatus = (statusFromServer) => {\n    return {\n        type: SET_STATUS,\n        status: statusFromServer\n    }\n}\n\nexport const changeStatusCreator = (flag) => ({\n    type: CHANGE_STATUS,\n    flag: flag\n})\n\nexport const addCurrentStatusTextCreator = (e) => ({\n    type: ADD_CURRENT_STATUS_TEXT,\n    textareaObject: e\n})\n\nconst getProfileInformationCreator = (dataFromServer) => {\n    return {\n        type: GET_PROFILE_INFORMATION,\n        data: dataFromServer\n    }\n}\n\nexport default profilePageReducer;\n"]},"metadata":{},"sourceType":"module"}