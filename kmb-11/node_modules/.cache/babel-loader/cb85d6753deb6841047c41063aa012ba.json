{"ast":null,"code":"import _objectSpread from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\lessons\\\\React\\\\kmb-11\\\\src\\\\Reducers\\\\loginPageReducer.js\";\nimport React from 'react';\nimport axios from \"../Dall/axios-instance\";\nimport { Redirect } from \"react-router\";\nimport { setLogInState } from \"./authReducer\";\nvar initialStateForLogin = {\n  currentLogin: \"\",\n  currentPassword: \"\",\n  currentCaptcha: \"\",\n  statusBar: false,\n  errorMessage: null,\n  captchaUrl: null\n};\nvar ADD_CURRENT_LOGIN = 'NETWORK/LOGIN/ADD_CURRENT_LOGIN';\nvar ADD_CURRENT_PASSWORD = 'NETWORK/LOGIN/ADD_CURRENT_PASSWORD';\nvar ADD_CURRENT_CAPTCHA = 'NETWORK/LOGIN/ADD_CURRENT_CAPTCHA';\nvar CHANGE_STATUS_BAR = 'NETWORK/LOGIN/CHANGE_STATUS_BAR';\nvar ADD_ERROR_MESSAGE = 'NETWORK/LOGIN/ADD_ERROR_MESSAGE';\nvar ADD_CAPTCHA_URL = 'NETWORK/LOGIN/ADD_CAPTCHA_URL';\n\nvar loginPageReducer = function loginPageReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateForLogin;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  var stateCopy = _objectSpread({}, state);\n\n  switch (action.type) {\n    case ADD_CURRENT_LOGIN:\n      stateCopy.currentLogin = action.textLoginField;\n      return stateCopy;\n\n    case ADD_CURRENT_PASSWORD:\n      stateCopy.currentPassword = action.textPasswordField;\n      return stateCopy;\n\n    case ADD_CURRENT_CAPTCHA:\n      stateCopy.currentCaptcha = action.textCaptchaField;\n      return stateCopy;\n\n    case CHANGE_STATUS_BAR:\n      stateCopy.statusBar = action.toogleStatusBar;\n      return stateCopy;\n\n    case ADD_ERROR_MESSAGE:\n      stateCopy.errorMessage = action.errorMessageText;\n      return stateCopy;\n\n    case ADD_CAPTCHA_URL:\n      stateCopy.captchaUrl = action.captchaUrlFromServer;\n      return stateCopy;\n\n    default:\n      return state;\n  }\n};\n\nexport var loginSubmitClick = function loginSubmitClick() {\n  return function (dispatch, getState) {\n    var state = getState();\n    dispatch(changestatusBar(true));\n    axios.post('auth/login', {\n      email: state.login.currentLogin,\n      password: state.login.currentPassword,\n      captcha: state.login.currentCaptcha\n    }).then(function (result) {\n      switch (result.data.resultCode) {\n        case 1:\n          dispatch(addErrorMessage(result.data.messages[0]));\n          dispatch(changestatusBar(false));\n          break;\n\n        case 10:\n          alert(\"БОлит!\");\n          dispatch(addErrorMessage(result.data.messages[0]));\n          axios.get('security/get-captcha-url').then(function (captchaResult) {\n            dispatch(addCaptchaUrl(captchaResult.data.url));\n          });\n          dispatch(changestatusBar(false));\n          break;\n\n        case 0:\n          dispatch(changestatusBar(false));\n          return React.createElement(Redirect, {\n            to: \"/profile\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          });\n      }\n    });\n  };\n}; //action creaters\n\nexport var addCurrentLoginDispatch = function addCurrentLoginDispatch(e) {\n  return {\n    type: ADD_CURRENT_LOGIN,\n    textLoginField: e.currentTarget.value\n  };\n};\nexport var addCurrentPasswordDispatch = function addCurrentPasswordDispatch(e) {\n  return {\n    type: ADD_CURRENT_PASSWORD,\n    textPasswordField: e.currentTarget.value\n  };\n};\nexport var addCurrentCaptchaDispatch = function addCurrentCaptchaDispatch(e) {\n  return {\n    type: ADD_CURRENT_CAPTCHA,\n    textCaptchaField: e.currentTarget.value\n  };\n};\n\nvar changestatusBar = function changestatusBar(toogleStatusBarUI) {\n  return {\n    type: CHANGE_STATUS_BAR,\n    toogleStatusBar: toogleStatusBarUI\n  };\n};\n\nvar addErrorMessage = function addErrorMessage(errorMessageText) {\n  return {\n    type: ADD_ERROR_MESSAGE,\n    errorMessageText: errorMessageText\n  };\n};\n\nvar addCaptchaUrl = function addCaptchaUrl(captchaUrlFromServer) {\n  return {\n    type: ADD_CAPTCHA_URL,\n    captchaUrlFromServer: captchaUrlFromServer\n  };\n};\n\nexport default loginPageReducer;","map":{"version":3,"sources":["C:\\lessons\\React\\kmb-11\\src\\Reducers\\loginPageReducer.js"],"names":["React","axios","Redirect","setLogInState","initialStateForLogin","currentLogin","currentPassword","currentCaptcha","statusBar","errorMessage","captchaUrl","ADD_CURRENT_LOGIN","ADD_CURRENT_PASSWORD","ADD_CURRENT_CAPTCHA","CHANGE_STATUS_BAR","ADD_ERROR_MESSAGE","ADD_CAPTCHA_URL","loginPageReducer","state","action","stateCopy","type","textLoginField","textPasswordField","textCaptchaField","toogleStatusBar","errorMessageText","captchaUrlFromServer","loginSubmitClick","dispatch","getState","changestatusBar","post","email","login","password","captcha","then","result","data","resultCode","addErrorMessage","messages","alert","get","captchaResult","addCaptchaUrl","url","addCurrentLoginDispatch","e","currentTarget","value","addCurrentPasswordDispatch","addCurrentCaptchaDispatch","toogleStatusBarUI"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from \"../Dall/axios-instance\";\nimport {Redirect} from \"react-router\";\nimport {setLogInState} from \"./authReducer\";\n\n\nlet initialStateForLogin = {\n    currentLogin: \"\",\n    currentPassword: \"\",\n    currentCaptcha: \"\",\n    statusBar: false,\n    errorMessage: null,\n    captchaUrl: null\n};\n\nconst ADD_CURRENT_LOGIN = 'NETWORK/LOGIN/ADD_CURRENT_LOGIN';\nconst ADD_CURRENT_PASSWORD = 'NETWORK/LOGIN/ADD_CURRENT_PASSWORD';\nconst ADD_CURRENT_CAPTCHA = 'NETWORK/LOGIN/ADD_CURRENT_CAPTCHA';\nconst CHANGE_STATUS_BAR = 'NETWORK/LOGIN/CHANGE_STATUS_BAR';\nconst ADD_ERROR_MESSAGE = 'NETWORK/LOGIN/ADD_ERROR_MESSAGE';\nconst ADD_CAPTCHA_URL = 'NETWORK/LOGIN/ADD_CAPTCHA_URL';\n\nconst loginPageReducer = (state = initialStateForLogin, action) => {\n    let stateCopy={...state}\n    switch (action.type) {\n        case ADD_CURRENT_LOGIN:\n            stateCopy.currentLogin = action.textLoginField;\n            return stateCopy;\n        case ADD_CURRENT_PASSWORD:\n            stateCopy.currentPassword = action.textPasswordField;\n            return stateCopy;\n        case ADD_CURRENT_CAPTCHA:\n            stateCopy.currentCaptcha = action.textCaptchaField;\n            return stateCopy;\n        case CHANGE_STATUS_BAR:\n            stateCopy.statusBar = action.toogleStatusBar;\n            return stateCopy;\n        case ADD_ERROR_MESSAGE:\n            stateCopy.errorMessage = action.errorMessageText;\n            return stateCopy;\n        case ADD_CAPTCHA_URL:\n            stateCopy.captchaUrl = action.captchaUrlFromServer;\n            return stateCopy;\n        default:\n            return state;\n    }\n};\n\nexport const loginSubmitClick = () => {\n    return (dispatch, getState) => {\n        let state = getState();\n        dispatch(changestatusBar(true));\n        axios.post('auth/login', {\n            email: state.login.currentLogin,\n            password: state.login.currentPassword,\n            captcha: state.login.currentCaptcha\n        }).then(result => {\n            switch (result.data.resultCode) {\n                case 1:\n                    dispatch(addErrorMessage(result.data.messages[0]));\n                    dispatch(changestatusBar(false));\n                    break;\n                case 10:\n                    alert(\"БОлит!\")\n                    dispatch(addErrorMessage(result.data.messages[0]));\n                    axios.get('security/get-captcha-url')\n                        .then(captchaResult => {\n                            dispatch(addCaptchaUrl(captchaResult.data.url));\n                        });\n                    dispatch(changestatusBar(false));\n                    break;\n                case 0:\n                    dispatch(changestatusBar(false));\n                    return <Redirect to={\"/profile\"} />\n            }\n        });\n    };\n};\n\n//action creaters\nexport const addCurrentLoginDispatch = (e) => {\n    return {\n        type: ADD_CURRENT_LOGIN,\n        textLoginField: e.currentTarget.value\n    }\n};\n\nexport const addCurrentPasswordDispatch = (e) => {\n    return {\n        type: ADD_CURRENT_PASSWORD,\n        textPasswordField: e.currentTarget.value\n    }\n};\n\nexport const addCurrentCaptchaDispatch = (e) => {\n    return {\n        type: ADD_CURRENT_CAPTCHA,\n        textCaptchaField: e.currentTarget.value\n    }\n};\n\nconst changestatusBar = (toogleStatusBarUI) => {\n    return {\n        type: CHANGE_STATUS_BAR,\n        toogleStatusBar: toogleStatusBarUI\n    }\n};\n\nconst addErrorMessage = (errorMessageText) => {\n    return {\n        type: ADD_ERROR_MESSAGE,\n        errorMessageText: errorMessageText\n    }\n}\n\nconst addCaptchaUrl = (captchaUrlFromServer) => {\n    return {\n        type: ADD_CAPTCHA_URL,\n        captchaUrlFromServer: captchaUrlFromServer\n    }\n}\n\nexport default loginPageReducer;\n"]},"metadata":{},"sourceType":"module"}