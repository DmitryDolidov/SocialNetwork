{"ast":null,"code":"var _jsxFileName = \"C:\\\\lessons\\\\React\\\\kmb-11\\\\src\\\\Components\\\\Dialogs\\\\Dialogs.js\";\nimport React from 'react';\nimport './Dialogs.css';\nimport DialogsListComponent from \"./DialogsList\";\nimport { connect } from 'react-redux';\nimport { Route } from \"react-router\";\nimport DialogsMessageComponent from \"./DialogsMessage\";\nimport { NavLink } from \"react-router-dom\";\n\nvar DialogsComponent = function DialogsComponent(props) {\n  // let showDialogsCorrespondents = props.showDialogsCorrespondents;\n  // let dialogsCorrespondents = props.dialogsCorrespondents;\n  // let returnDialogsCorrespondents;\n  // if (!dialogsCorrespondents) {\n  //     showDialogsCorrespondents();\n  // } else {\n  //\n  // }\n  // ;\n  console.log(props.dialogCorrespondents);\n  var returnDialogCorrespondents = props.dialogCorrespondents.map(function (el) {\n    if (el.id !== 0) {\n      return React.createElement(NavLink, {\n        to: \"/dialogs/message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(DialogsListComponent //showDialog={props.showDialog}\n      //currentCorrespondentId={props.currentCorrespondentId}\n      , {\n        avatar: el.avatar,\n        name: el.firstName,\n        correspondentId: el.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }));\n    }\n  }); // let returnMessages = '';\n  // if (dialogsCorrespondents) {\n  //     returnMessages = props.messages.map((el) => {\n  //         let correspondentId = el.id;\n  //         if (correspondentId === 0) {\n  //             return <DialogsMessageComponent\n  //                 avatar={\"https://pp.userapi.com/c840638/v840638961/8a79b/qKKpiL6bDA4.jpg?ava=1\"}\n  //                 message={el.message}\n  //                 name={\"Я\"}/>\n  //         } else {\n  //             --correspondentId;\n  //             return <DialogsMessageComponent avatar={props.dialogsCorrespondents[correspondentId].avatar}\n  //                                             message={el.message}\n  //                                             name={props.dialogsCorrespondents[correspondentId].firstName}/>\n  //         };\n  //     });\n  // };\n\n  return React.createElement(\"div\", {\n    className: 'dialogs-box',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dialogs-titul\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"\\u0414\\u0438\\u0430\\u043B\\u043E\\u0433\\u0438\"), React.createElement(\"div\", {\n    className: \"dialogs-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dialogs-users\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, returnDialogCorrespondents), React.createElement(\"div\", {\n    className: \"dialogs-messages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/dialogs/1\",\n    children: function children() {\n      return React.createElement(DialogsMessageComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    dialogCorrespondents: state.dialogData.dialogCorrespondents\n  };\n};\n\nvar ConnectedDialogComponent = connect(mapStateToProps)(DialogsComponent);\nexport default ConnectedDialogComponent;","map":{"version":3,"sources":["C:\\lessons\\React\\kmb-11\\src\\Components\\Dialogs\\Dialogs.js"],"names":["React","DialogsListComponent","connect","Route","DialogsMessageComponent","NavLink","DialogsComponent","props","console","log","dialogCorrespondents","returnDialogCorrespondents","map","el","id","avatar","firstName","mapStateToProps","state","dialogData","ConnectedDialogComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAOC,oBAAP,MAAiC,eAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,QAAoB,cAApB;AACA,OAAOC,uBAAP,MAAoC,kBAApC;AACA,SAAQC,OAAR,QAAsB,kBAAtB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,oBAAlB;AACA,MAAIC,0BAA0B,GAAGJ,KAAK,CAACG,oBAAN,CAA2BE,GAA3B,CAA+B,UAACC,EAAD,EAAQ;AACpE,QAAGA,EAAE,CAACC,EAAH,KAAU,CAAb,EAAgB;AACZ,aAAQ,oBAAC,OAAD;AAAS,QAAA,EAAE,EAAC,kBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgC,oBAAC,oBAAD,CAAsB;AAC1D;AADoC;AAE5B,QAAA,MAAM,EAAED,EAAE,CAACE,MAFiB;AAET,QAAA,IAAI,EAAEF,EAAE,CAACG,SAFA;AAEW,QAAA,eAAe,EAAEH,EAAE,CAACC,EAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhC,CAAR;AAIH;AACJ,GAPgC,CAAjC,CAZgC,CAqBhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACI;AAAK,IAAA,SAAS,EAAE,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADJ,EAII;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,0BADL,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,YAAlB;AAA+B,IAAA,QAAQ,EAAE;AAAA,aAAM,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN;AAAA,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CAJJ,CADJ;AAeH,CAtDD;;AAwDA,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHR,IAAAA,oBAAoB,EAAEQ,KAAK,CAACC,UAAN,CAAiBT;AADpC,GAAP;AAGH,CAJD;;AAKA,IAAMU,wBAAwB,GAAGlB,OAAO,CAACe,eAAD,CAAP,CAAyBX,gBAAzB,CAAjC;AAEA,eAAec,wBAAf","sourcesContent":["import React from 'react';\nimport './Dialogs.css';\nimport DialogsListComponent from \"./DialogsList\";\nimport {connect} from 'react-redux';\nimport {Route} from \"react-router\";\nimport DialogsMessageComponent from \"./DialogsMessage\";\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogsComponent = (props) => {\n\n    // let showDialogsCorrespondents = props.showDialogsCorrespondents;\n    // let dialogsCorrespondents = props.dialogsCorrespondents;\n    // let returnDialogsCorrespondents;\n    // if (!dialogsCorrespondents) {\n    //     showDialogsCorrespondents();\n    // } else {\n    //\n    // }\n    // ;\n    console.log(props.dialogCorrespondents);\n    let returnDialogCorrespondents = props.dialogCorrespondents.map((el) => {\n        if(el.id !== 0) {\n            return (<NavLink to='/dialogs/message' ><DialogsListComponent //showDialog={props.showDialog}\n                //currentCorrespondentId={props.currentCorrespondentId}\n                        avatar={el.avatar} name={el.firstName} correspondentId={el.id}/>\n                    </NavLink>)\n        }\n    });\n\n    // let returnMessages = '';\n    // if (dialogsCorrespondents) {\n    //     returnMessages = props.messages.map((el) => {\n    //         let correspondentId = el.id;\n    //         if (correspondentId === 0) {\n    //             return <DialogsMessageComponent\n    //                 avatar={\"https://pp.userapi.com/c840638/v840638961/8a79b/qKKpiL6bDA4.jpg?ava=1\"}\n    //                 message={el.message}\n    //                 name={\"Я\"}/>\n    //         } else {\n    //             --correspondentId;\n    //             return <DialogsMessageComponent avatar={props.dialogsCorrespondents[correspondentId].avatar}\n    //                                             message={el.message}\n    //                                             name={props.dialogsCorrespondents[correspondentId].firstName}/>\n    //         };\n    //     });\n    // };\n\n    return (\n        <div className={'dialogs-box'}>\n            <div className=\"dialogs-titul\">\n                Диалоги\n            </div>\n            <div className=\"dialogs-content\">\n                <div className=\"dialogs-users\">\n                    {returnDialogCorrespondents}\n                </div>\n                <div className=\"dialogs-messages\">\n                    <Route exact path='/dialogs/1' children={() => <DialogsMessageComponent />}/>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogCorrespondents: state.dialogData.dialogCorrespondents\n    }\n};\nconst ConnectedDialogComponent = connect(mapStateToProps)(DialogsComponent);\n\nexport default ConnectedDialogComponent;"]},"metadata":{},"sourceType":"module"}