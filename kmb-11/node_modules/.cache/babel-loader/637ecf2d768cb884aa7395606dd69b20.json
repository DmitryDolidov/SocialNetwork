{"ast":null,"code":"import _objectSpread from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport React from 'react';\nimport axios from \"../Dall/axios-instance\";\nimport { setLogInState } from \"./authReducer\";\nvar initialStateForLogin = {\n  currentLogin: \"\",\n  currentPassword: \"\",\n  statusBar: false,\n  errorMessage: null,\n  captchaUrl: null\n};\nvar ADD_CURRENT_LOGIN = 'NETWORK/LOGIN/ADD_CURRENT_LOGIN';\nvar ADD_CURRENT_PASSWORD = 'NETWORK/LOGIN/ADD_CURRENT_PASSWORD';\nvar CHANGE_STATUS_BAR = 'NETWORK/LOGIN/CHANGE_STATUS_BAR';\nvar ADD_ERROR_MESSAGE = 'NETWORK/LOGIN/ADD_ERROR_MESSAGE';\nvar ADD_CAPTCHA_URL = 'NETWORK/LOGIN/ADD_CAPTCHA_URL';\n\nvar loginPageReducer = function loginPageReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateForLogin;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  var stateCopy = _objectSpread({}, state);\n\n  switch (action.type) {\n    case ADD_CURRENT_LOGIN:\n      stateCopy.currentLogin = action.textLoginField;\n      return stateCopy;\n\n    case ADD_CURRENT_PASSWORD:\n      stateCopy.currentPassword = action.textPasswordField;\n      return stateCopy;\n\n    case CHANGE_STATUS_BAR:\n      stateCopy.statusBar = action.toogleStatusBar;\n      return stateCopy;\n\n    case ADD_ERROR_MESSAGE:\n      stateCopy.errorMessage = action.errorMessageText;\n      return stateCopy;\n\n    case ADD_CAPTCHA_URL:\n      stateCopy.captchaUrl = action.captchaUrlFromServer;\n      return stateCopy;\n\n    default:\n      return state;\n  }\n};\n\nexport var loginSubmitClick = function loginSubmitClick() {\n  return function (dispatch, getState) {\n    var state = getState();\n    dispatch(changestatusBar(true));\n    axios.post('auth/login', {\n      email: state.login.currentLogin,\n      password: state.login.currentPassword\n    }).then(function (result) {\n      console.log(result.data.resultCode);\n\n      switch (result.data.resultCode) {\n        case 1:\n          dispatch(addErrorMessage(result.data.messages[0]));\n          dispatch(changestatusBar(false));\n\n        case 10:\n          dispatch(addErrorMessage(result.data.messages[0]));\n          axios.get('security/get-captcha-url').then(function (captchaResult) {\n            dispatch(addCaptchaUrl(captchaResult));\n            console.log(captchaResult);\n          });\n          dispatch(changestatusBar(false));\n\n        case 0:\n          dispatch(changestatusBar(false));\n          dispatch(setLogInState(true));\n      }\n    });\n  };\n}; //action creaters\n\nexport var addCurrentLoginDispatch = function addCurrentLoginDispatch(e) {\n  return {\n    type: ADD_CURRENT_LOGIN,\n    textLoginField: e.currentTarget.value\n  };\n};\nexport var addCurrentPasswordDispatch = function addCurrentPasswordDispatch(e) {\n  return {\n    type: ADD_CURRENT_PASSWORD,\n    textPasswordField: e.currentTarget.value\n  };\n};\n\nvar changestatusBar = function changestatusBar(toogleStatusBarUI) {\n  return {\n    type: CHANGE_STATUS_BAR,\n    toogleStatusBar: toogleStatusBarUI\n  };\n};\n\nvar addErrorMessage = function addErrorMessage(errorMessageText) {\n  return {\n    type: ADD_ERROR_MESSAGE,\n    errorMessageText: errorMessageText\n  };\n};\n\nvar addCaptchaUrl = function addCaptchaUrl(captchaUrlFromServer) {\n  return {\n    type: ADD_CAPTCHA_URL,\n    captchaUrlFromServer: captchaUrlFromServer\n  };\n};\n\nexport default loginPageReducer;","map":{"version":3,"sources":["C:\\lessons\\React\\kmb-11\\src\\Reducers\\loginPageReducer.js"],"names":["React","axios","setLogInState","initialStateForLogin","currentLogin","currentPassword","statusBar","errorMessage","captchaUrl","ADD_CURRENT_LOGIN","ADD_CURRENT_PASSWORD","CHANGE_STATUS_BAR","ADD_ERROR_MESSAGE","ADD_CAPTCHA_URL","loginPageReducer","state","action","stateCopy","type","textLoginField","textPasswordField","toogleStatusBar","errorMessageText","captchaUrlFromServer","loginSubmitClick","dispatch","getState","changestatusBar","post","email","login","password","then","result","console","log","data","resultCode","addErrorMessage","messages","get","captchaResult","addCaptchaUrl","addCurrentLoginDispatch","e","currentTarget","value","addCurrentPasswordDispatch","toogleStatusBarUI"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from \"../Dall/axios-instance\";\nimport {setLogInState} from \"./authReducer\";\n\n\nlet initialStateForLogin = {\n    currentLogin: \"\",\n    currentPassword: \"\",\n    statusBar: false,\n    errorMessage: null,\n    captchaUrl: null\n};\n\nconst ADD_CURRENT_LOGIN = 'NETWORK/LOGIN/ADD_CURRENT_LOGIN';\nconst ADD_CURRENT_PASSWORD = 'NETWORK/LOGIN/ADD_CURRENT_PASSWORD';\nconst CHANGE_STATUS_BAR = 'NETWORK/LOGIN/CHANGE_STATUS_BAR';\nconst ADD_ERROR_MESSAGE = 'NETWORK/LOGIN/ADD_ERROR_MESSAGE';\nconst ADD_CAPTCHA_URL = 'NETWORK/LOGIN/ADD_CAPTCHA_URL';\n\nconst loginPageReducer = (state = initialStateForLogin, action) => {\n    let stateCopy={...state}\n    switch (action.type) {\n        case ADD_CURRENT_LOGIN:\n            stateCopy.currentLogin = action.textLoginField;\n            return stateCopy;\n        case ADD_CURRENT_PASSWORD:\n            stateCopy.currentPassword = action.textPasswordField;\n            return stateCopy;\n        case CHANGE_STATUS_BAR:\n            stateCopy.statusBar = action.toogleStatusBar;\n            return stateCopy;\n        case ADD_ERROR_MESSAGE:\n            stateCopy.errorMessage = action.errorMessageText;\n            return stateCopy;\n        case ADD_CAPTCHA_URL:\n            stateCopy.captchaUrl = action.captchaUrlFromServer;\n            return stateCopy;\n        default:\n            return state;\n    }\n};\n\nexport const loginSubmitClick = () => {\n    return (dispatch, getState) => {\n        let state = getState();\n        dispatch(changestatusBar(true));\n        axios.post('auth/login', {\n            email: state.login.currentLogin,\n            password: state.login.currentPassword\n        }).then(result => {\n            console.log(result.data.resultCode);\n            switch (result.data.resultCode) {\n                case 1:\n                    dispatch(addErrorMessage(result.data.messages[0]));\n                    dispatch(changestatusBar(false));\n                case 10:\n                    dispatch(addErrorMessage(result.data.messages[0]));\n                    axios.get('security/get-captcha-url')\n                        .then(captchaResult => {\n                            dispatch(addCaptchaUrl(captchaResult))\n                            console.log(captchaResult)\n                        });\n                    dispatch(changestatusBar(false));\n                case 0:\n                    dispatch(changestatusBar(false));\n                    dispatch(setLogInState(true));\n            }\n        });\n    };\n};\n\n//action creaters\nexport const addCurrentLoginDispatch = (e) => {\n    return {\n        type: ADD_CURRENT_LOGIN,\n        textLoginField: e.currentTarget.value\n    }\n};\n\nexport const addCurrentPasswordDispatch = (e) => {\n    return {\n        type: ADD_CURRENT_PASSWORD,\n        textPasswordField: e.currentTarget.value\n    }\n};\n\nconst changestatusBar = (toogleStatusBarUI) => {\n    return {\n        type: CHANGE_STATUS_BAR,\n        toogleStatusBar: toogleStatusBarUI\n    }\n};\n\nconst addErrorMessage = (errorMessageText) => {\n    return {\n        type: ADD_ERROR_MESSAGE,\n        errorMessageText: errorMessageText\n    }\n}\n\nconst addCaptchaUrl = (captchaUrlFromServer) => {\n    return {\n        type: ADD_CAPTCHA_URL,\n        captchaUrlFromServer: captchaUrlFromServer\n    }\n}\n\nexport default loginPageReducer;\n"]},"metadata":{},"sourceType":"module"}