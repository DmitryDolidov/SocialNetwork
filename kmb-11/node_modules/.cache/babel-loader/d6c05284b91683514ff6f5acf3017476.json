{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport React from 'react';\nimport avatar from \"../Components/Profile/img/avatar.jpg\";\nimport axios from \"../Dall/axios-instance\";\nimport { profileService } from \"../Dall/profile-service\";\nvar initialStateForProfile = {\n  aboutMe: \"Информация не указана\",\n  contacts: {\n    facebook: \"\",\n    github: \"\",\n    instagram: \"\",\n    mainLink: \"\",\n    twitter: \"\",\n    vk: \"\",\n    website: \"\",\n    youtube: \"\"\n  },\n  photos: {\n    small: null,\n    large: avatar\n  },\n  status: \"У вас нет статуса\",\n  lookingForAJob: false,\n  lookingForAJobDescription: 'Ищу работу, знаю это это и это',\n  fullName: null,\n  statusChangeFlag: false,\n  currentStatus: \"\",\n  redProfileError: null,\n  redProfileSuccess: null,\n  updatePhotoSuccess: null\n};\nvar SET_STATUS = 'NETWORK/PROFILE/SET_STATUS';\nvar GET_PROFILE_INFORMATION = 'NETWORK/PROFILE/GET_PROFILE_INFORMATION';\nvar CHANGE_STATUS = 'NETWORK/PROFILE/CHANGE_STATUS';\nvar EDIT_ERRORS = 'NETWORK/PROFILE/EDIT_DATA/EDIT_ERRORS';\nvar ADD_CURRENT_STATUS_TEXT = 'NETWORK/PROFILE/ADD_CURRENT_STATUS_TEXT';\n\nvar profilePageReducer = function profilePageReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateForProfile;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  var stateCopy = _objectSpread({}, state);\n\n  switch (action.type) {\n    case SET_STATUS:\n      stateCopy.status = action.status;\n      stateCopy.currentStatus = action.status;\n      return stateCopy;\n\n    case CHANGE_STATUS:\n      stateCopy.statusChangeFlag = action.flag;\n      return stateCopy;\n\n    case ADD_CURRENT_STATUS_TEXT:\n      stateCopy.currentStatus = action.textareaObject.target.value;\n      return stateCopy;\n\n    case GET_PROFILE_INFORMATION:\n      stateCopy.aboutMe = action.data.aboutMe;\n      stateCopy.contacts = _objectSpread({}, action.data.contacts);\n      stateCopy.lookingForAJob = action.data.lookingForAJob;\n      stateCopy.fullName = action.data.fullName;\n      stateCopy.lookingForAJobDescription = action.data.lookingForAJobDescription;\n      return stateCopy;\n\n    case EDIT_ERRORS:\n      stateCopy.contacts.redProfileError = action.errors;\n      return stateCopy;\n\n    default:\n      return state;\n  }\n}; //Saga\n\n\nexport var updatePhotoSaga = function updatePhotoSaga(data) {\n  return function () {\n    axios.post('profile/photo', data, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(function (res) {\n      console.log(res.data);\n    });\n  };\n}; //Thunks\n\nexport var getStatusThunk = function getStatusThunk() {\n  return function (dispatch, getState) {\n    var state = getState();\n    var userId = state.auth.userInfo.userId;\n    axios.get(\"profile/status/\".concat(userId)).then(function (result) {\n      dispatch(setStatus(result.data));\n    });\n  };\n};\nexport var addNewStatusThunk = function addNewStatusThunk() {\n  return function (dispatch, getState) {\n    var state = getState();\n    axios.put('profile/status', {\n      status: state.profileData.currentStatus\n    }).then(function () {\n      dispatch(changeStatusCreator(false));\n      dispatch(getStatusThunk());\n    });\n  };\n};\nexport var getProfileInformationThunk = function getProfileInformationThunk() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var state, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                state = getState();\n                _context.next = 3;\n                return profileService.getProfileInformation(state.auth.userInfo.userId);\n\n              case 3:\n                data = _context.sent;\n                dispatch(getProfileInformationCreator(data));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var editProfileDataThunk = function editProfileDataThunk(newData) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n        var result, errors;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return profileService.editNewProfileData(newData);\n\n              case 2:\n                result = _context2.sent;\n\n                //сначало отправляются данные из формы на сервер\n                //а здесь уже диспатчим в стейт если все успешно отправилось\n                if (result.data.resultCode === 0) {\n                  //диспатчим данные в наш стейт\n                  dispatch(editProfileDataCreator(newData));\n                } else {\n                  errors = result.data.messages;\n                  console.log(result.data);\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n}; //action creators\n\nvar editProfileDataCreator = function editProfileDataCreator(newData) {\n  return {\n    type: EDIT_DATA,\n    newData: newData\n  };\n};\n\nvar setStatus = function setStatus(statusFromServer) {\n  return {\n    type: SET_STATUS,\n    status: statusFromServer\n  };\n};\n\nexport var changeStatusCreator = function changeStatusCreator(flag) {\n  return {\n    type: CHANGE_STATUS,\n    flag: flag\n  };\n};\nexport var addCurrentStatusTextCreator = function addCurrentStatusTextCreator(e) {\n  return {\n    type: ADD_CURRENT_STATUS_TEXT,\n    textareaObject: e\n  };\n};\n\nvar getProfileInformationCreator = function getProfileInformationCreator(dataFromServer) {\n  return {\n    type: GET_PROFILE_INFORMATION,\n    data: dataFromServer\n  };\n};\n\nexport default profilePageReducer;","map":{"version":3,"sources":["C:\\lessons\\React\\kmb-11\\src\\Reducers\\profilePageReducer.js"],"names":["React","avatar","axios","profileService","initialStateForProfile","aboutMe","contacts","facebook","github","instagram","mainLink","twitter","vk","website","youtube","photos","small","large","status","lookingForAJob","lookingForAJobDescription","fullName","statusChangeFlag","currentStatus","redProfileError","redProfileSuccess","updatePhotoSuccess","SET_STATUS","GET_PROFILE_INFORMATION","CHANGE_STATUS","EDIT_ERRORS","ADD_CURRENT_STATUS_TEXT","profilePageReducer","state","action","stateCopy","type","flag","textareaObject","target","value","data","errors","updatePhotoSaga","post","headers","then","res","console","log","getStatusThunk","dispatch","getState","userId","auth","userInfo","get","result","setStatus","addNewStatusThunk","put","profileData","changeStatusCreator","getProfileInformationThunk","getProfileInformation","getProfileInformationCreator","editProfileDataThunk","newData","editNewProfileData","resultCode","editProfileDataCreator","messages","EDIT_DATA","statusFromServer","addCurrentStatusTextCreator","e","dataFromServer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport avatar from \"../Components/Profile/img/avatar.jpg\";\nimport axios from \"../Dall/axios-instance\";\nimport {profileService} from \"../Dall/profile-service\";\n\nlet initialStateForProfile = {\n    aboutMe: \"Информация не указана\",\n    contacts: {\n        facebook: \"\",\n        github: \"\",\n        instagram: \"\",\n        mainLink: \"\",\n        twitter: \"\",\n        vk: \"\",\n        website: \"\",\n        youtube: \"\"\n    },\n    photos: {\n        small: null,\n        large: avatar\n    },\n    status: \"У вас нет статуса\",\n    lookingForAJob: false,\n    lookingForAJobDescription: 'Ищу работу, знаю это это и это',\n    fullName: null,\n    statusChangeFlag: false,\n    currentStatus: \"\",\n    redProfileError: null,\n    redProfileSuccess: null,\n    updatePhotoSuccess: null\n};\n\nconst SET_STATUS = 'NETWORK/PROFILE/SET_STATUS';\nconst GET_PROFILE_INFORMATION = 'NETWORK/PROFILE/GET_PROFILE_INFORMATION';\nconst CHANGE_STATUS = 'NETWORK/PROFILE/CHANGE_STATUS';\nconst EDIT_ERRORS = 'NETWORK/PROFILE/EDIT_DATA/EDIT_ERRORS';\nconst ADD_CURRENT_STATUS_TEXT = 'NETWORK/PROFILE/ADD_CURRENT_STATUS_TEXT';\n\nconst profilePageReducer = (state = initialStateForProfile, action) => {\n    let stateCopy = {...state};\n    switch (action.type) {\n        case SET_STATUS:\n            stateCopy.status = action.status\n            stateCopy.currentStatus = action.status\n            return stateCopy\n        case CHANGE_STATUS:\n            stateCopy.statusChangeFlag = action.flag\n            return stateCopy\n        case ADD_CURRENT_STATUS_TEXT:\n            stateCopy.currentStatus = action.textareaObject.target.value\n            return stateCopy\n        case GET_PROFILE_INFORMATION:\n            stateCopy.aboutMe = action.data.aboutMe\n            stateCopy.contacts = {...action.data.contacts}\n            stateCopy.lookingForAJob = action.data.lookingForAJob\n            stateCopy.fullName = action.data.fullName\n            stateCopy.lookingForAJobDescription = action.data.lookingForAJobDescription\n            return stateCopy\n        case EDIT_ERRORS:\n            stateCopy.contacts.redProfileError = action.errors\n            return stateCopy\n        default:\n            return state;\n    }\n};\n\n//Saga\n\nexport const updatePhotoSaga = (data) => {\n    return () => {\n        axios.post('profile/photo', data, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }).then (res => {\n            console.log(res.data)\n        })\n    }\n}\n\n//Thunks\n\nexport const getStatusThunk = () => {\n    return (dispatch, getState) => {\n        let state = getState();\n                let userId = state.auth.userInfo.userId;\n                axios.get(`profile/status/${userId}`).then(\n                    result => {\n                        dispatch(setStatus(result.data));\n                    }\n                )\n    }\n}\n\nexport const addNewStatusThunk = () => {\n    return (dispatch, getState) => {\n        let state = getState();\n        axios.put('profile/status', {status: state.profileData.currentStatus}).then(\n            () => {\n                dispatch(changeStatusCreator(false));\n                dispatch(getStatusThunk())\n            }\n        );\n    }\n}\n\nexport const getProfileInformationThunk = () => {\n    return async (dispatch, getState) => {\n        let state = getState()\n        let data = await profileService.getProfileInformation(state.auth.userInfo.userId)\n        dispatch(getProfileInformationCreator((data)))\n    }\n}\n\nexport const editProfileDataThunk = (newData) => {\n    return async (dispatch, getState) => {\n        let result = await profileService.editNewProfileData(newData) //сначало отправляются данные из формы на сервер\n        //а здесь уже диспатчим в стейт если все успешно отправилось\n        if(result.data.resultCode === 0) {\n            //диспатчим данные в наш стейт\n            dispatch(editProfileDataCreator(newData))\n        } else {\n            let errors = result.data.messages;\n            console.log(result.data)\n        }\n\n    }\n}\n\n//action creators\n\nconst editProfileDataCreator = (newData) => {\n    return {\n        type: EDIT_DATA,\n        newData\n    }\n}\n\nconst setStatus = (statusFromServer) => {\n    return {\n        type: SET_STATUS,\n        status: statusFromServer\n    }\n}\n\nexport const changeStatusCreator = (flag) => ({\n    type: CHANGE_STATUS,\n    flag: flag\n})\n\nexport const addCurrentStatusTextCreator = (e) => ({\n    type: ADD_CURRENT_STATUS_TEXT,\n    textareaObject: e\n})\n\nconst getProfileInformationCreator = (dataFromServer) => {\n    return {\n        type: GET_PROFILE_INFORMATION,\n        data: dataFromServer\n    }\n}\n\nexport default profilePageReducer;\n"]},"metadata":{},"sourceType":"module"}