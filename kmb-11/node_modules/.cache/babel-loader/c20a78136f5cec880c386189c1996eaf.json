{"ast":null,"code":"var _jsxFileName = \"C:\\\\lessons\\\\React\\\\kmb-11\\\\src\\\\Components\\\\Dialogs\\\\Dialogs.js\";\nimport React from 'react';\nimport './Dialogs.css';\nimport DialogsListComponent from \"./DialogsList\";\nimport { connect } from 'react-redux';\nimport { Route } from \"react-router\";\nimport DialogsMessageComponent from \"./DialogsMessage\";\nimport { NavLink } from \"react-router-dom\";\nimport DefaultDialogsMessageComponent from \"./DefaultDialogsMessage\";\n\nvar DialogsComponent = function DialogsComponent(props) {\n  var returnDialogCorrespondents = props.dialogCorrespondents.map(function (el) {\n    if (el.id !== 0) {\n      return React.createElement(NavLink, {\n        to: \"/dialogs/\".concat(el.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(DialogsListComponent, {\n        avatar: el.avatar,\n        name: el.firstName,\n        currentCorresspondentId: props.currentCorresspondentId,\n        correspondentId: el.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }));\n    }\n  });\n  var returnMessages = props.dialogMessages[props.currentCorresspondentId].map(function (el) {\n    return React.createElement(DialogsMessageComponent, {\n      avatar: props.dialogCorrespondents[el.id].avatar,\n      name: props.dialogCorrespondents[el.id].firstName,\n      message: el.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    });\n  });\n  return React.createElement(\"div\", {\n    className: 'dialogs-box',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dialogs-titul\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"\\u0414\\u0438\\u0430\\u043B\\u043E\\u0433\\u0438\"), React.createElement(\"div\", {\n    className: \"dialogs-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dialogs-users\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, returnDialogCorrespondents), React.createElement(\"div\", {\n    className: \"dialogs-messages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/dialogs/\".concat(props.currentCorresspondentId),\n    render: function render() {\n      return returnMessages;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/dialogs\",\n    render: function render() {\n      return React.createElement(DefaultDialogsMessageComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    dialogCorrespondents: state.dialogData.dialogCorrespondents,\n    currentCorresspondentId: state.dialogData.currentCorresspondentId,\n    dialogMessages: state.dialogData.dialogMessages\n  };\n};\n\nvar ConnectedDialogComponent = connect(mapStateToProps)(DialogsComponent);\nexport default ConnectedDialogComponent;","map":{"version":3,"sources":["C:\\lessons\\React\\kmb-11\\src\\Components\\Dialogs\\Dialogs.js"],"names":["React","DialogsListComponent","connect","Route","DialogsMessageComponent","NavLink","DefaultDialogsMessageComponent","DialogsComponent","props","returnDialogCorrespondents","dialogCorrespondents","map","el","id","avatar","firstName","currentCorresspondentId","returnMessages","dialogMessages","message","mapStateToProps","state","dialogData","ConnectedDialogComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Dialogs.css';\nimport DialogsListComponent from \"./DialogsList\";\nimport {connect} from 'react-redux';\nimport {Route} from \"react-router\";\nimport DialogsMessageComponent from \"./DialogsMessage\";\nimport {NavLink} from \"react-router-dom\";\nimport DefaultDialogsMessageComponent from \"./DefaultDialogsMessage\";\n\nconst DialogsComponent = (props) => {\n\n    let returnDialogCorrespondents = props.dialogCorrespondents.map((el) => {\n        if (el.id !== 0) {\n            return (<NavLink to={`/dialogs/${el.id}`}><DialogsListComponent\n                avatar={el.avatar} name={el.firstName} currentCorresspondentId={props.currentCorresspondentId}\n                correspondentId={el.id}/>\n            </NavLink>)\n        }\n    });\n\n    let returnMessages = props.dialogMessages[props.currentCorresspondentId].map((el) => {\n        return (<DialogsMessageComponent avatar={props.dialogCorrespondents[el.id].avatar}\n                                         name={props.dialogCorrespondents[el.id].firstName} message={el.message}/>);\n    });\n\n    return (\n        <div className={'dialogs-box'}>\n            <div className=\"dialogs-titul\">\n                Диалоги\n            </div>\n            <div className=\"dialogs-content\">\n                <div className=\"dialogs-users\">\n                    {returnDialogCorrespondents}\n                </div>\n                <div className=\"dialogs-messages\">\n                    <Route path={`/dialogs/${props.currentCorresspondentId}`} render={() => returnMessages}/>\n                    <Route path={`/dialogs`} render={() => <DefaultDialogsMessageComponent/>}/>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogCorrespondents: state.dialogData.dialogCorrespondents,\n        currentCorresspondentId: state.dialogData.currentCorresspondentId,\n        dialogMessages: state.dialogData.dialogMessages\n    }\n};\n\nconst ConnectedDialogComponent = connect(mapStateToProps)(DialogsComponent);\n\nexport default ConnectedDialogComponent;"]},"metadata":{},"sourceType":"module"}