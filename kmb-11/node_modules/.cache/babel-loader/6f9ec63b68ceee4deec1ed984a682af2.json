{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport React from 'react';\nimport axios from \"../Dall/axios-instance\";\nimport { profileService } from \"../Dall/profile-service\";\nvar initialStateForProfile = {\n  aboutMe: \"Информация не указана\",\n  contacts: {\n    facebook: \"\",\n    github: \"\",\n    instagram: \"\",\n    mainLink: \"\",\n    twitter: \"\",\n    vk: \"\",\n    website: \"\",\n    youtube: \"\"\n  },\n  photos: {\n    small: null,\n    large: null\n  },\n  status: \"У вас нет статуса\",\n  lookingForAJob: false,\n  lookingForAJobDescription: 'Ищу работу, знаю это это и это',\n  fullName: null,\n  statusChangeFlag: false,\n  currentStatus: \"\",\n  redProfileError: null,\n  redProfileSuccess: null,\n  updatePhotoStatus: null,\n  updatePhotoErrorText: null\n};\nvar SET_STATUS = 'NETWORK/PROFILE/SET_STATUS';\nvar GET_PROFILE_INFORMATION = 'NETWORK/PROFILE/GET_PROFILE_INFORMATION';\nvar CHANGE_STATUS = 'NETWORK/PROFILE/CHANGE_STATUS';\nvar EDIT_DATA = 'NETWORK/PROFILE/EDIT_DATA';\nvar EDIT_ERRORS = 'NETWORK/PROFILE/EDIT_DATA/EDIT_ERRORS';\nvar ADD_CURRENT_STATUS_TEXT = 'NETWORK/PROFILE/ADD_CURRENT_STATUS_TEXT';\nvar CLEAR_UPDATE_PHOTO_STATUS = 'NETWORK/PROFILE/EDIT_DATA/CLEAR_UPDATE_PHOTO_STATUS';\nvar CLEAR_UPDATE_PHOTO_ERROR_TEXT = 'NETWORK/PROFILE/EDIT_DATA/CLEAR_UPDATE_PHOTO_ERROR_TEXT';\nvar CHANGE_UPDATE_PHOTO_STATUS = 'NETWORK/PROFILE/EDIT_DATA/CHANGE_UPDATE_PHOTO_STATUS';\n\nvar profilePageReducer = function profilePageReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateForProfile;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  var stateCopy = _objectSpread({}, state);\n\n  switch (action.type) {\n    case SET_STATUS:\n      stateCopy.status = action.status;\n      stateCopy.currentStatus = action.status;\n      return stateCopy;\n\n    case CHANGE_STATUS:\n      stateCopy.statusChangeFlag = action.flag;\n      return stateCopy;\n\n    case ADD_CURRENT_STATUS_TEXT:\n      stateCopy.currentStatus = action.textareaObject.target.value;\n      return stateCopy;\n\n    case GET_PROFILE_INFORMATION:\n      stateCopy.aboutMe = action.data.aboutMe;\n      stateCopy.contacts = _objectSpread({}, action.data.contacts);\n      stateCopy.lookingForAJob = action.data.lookingForAJob;\n      stateCopy.fullName = action.data.fullName;\n      stateCopy.lookingForAJobDescription = action.data.lookingForAJobDescription;\n      stateCopy.photos = _objectSpread({}, action.data.photos);\n      return stateCopy;\n\n    case EDIT_DATA:\n      stateCopy.aboutMe = action.newData.aboutMe;\n      stateCopy.contacts = _objectSpread({}, action.newData.contacts);\n      stateCopy.lookingForAJob = action.newData.lookingForAJob;\n      stateCopy.fullName = action.newData.fullName;\n      stateCopy.lookingForAJobDescription = action.newData.lookingForAJobDescription;\n      return stateCopy;\n\n    case EDIT_ERRORS:\n      stateCopy.contacts.redProfileError = action.errors;\n      return stateCopy;\n\n    case CLEAR_UPDATE_PHOTO_STATUS:\n      stateCopy.updatePhotoStatus = null;\n      return stateCopy;\n\n    case CLEAR_UPDATE_PHOTO_ERROR_TEXT:\n      stateCopy.updatePhotoStatus = null;\n      stateCopy.updatePhotoErrorText = null;\n      return stateCopy;\n\n    case CHANGE_UPDATE_PHOTO_STATUS:\n      stateCopy.updatePhotoStatus = action.updatePhotoStatus;\n      stateCopy.updatePhotoErrorText = action.updatePhotoErrorText;\n      return stateCopy;\n\n    default:\n      return state;\n  }\n}; //Saga\n\n\nexport var updatePhotoSaga = function updatePhotoSaga(data) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return profileService.updatePhoto(data);\n\n              case 2:\n                result = _context.sent;\n\n                if (result.resultCode === 0) {\n                  dispatch(changeUpdatePhotoStatus(\"success\"));\n                } else {\n                  dispatch(changeUpdatePhotoStatus(\"error\", result.messages));\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}; //Thunks\n\nexport var getStatusThunk = function getStatusThunk() {\n  return function (dispatch, getState) {\n    var state = getState();\n    var userId = state.auth.userInfo.userId;\n    axios.get(\"profile/status/\".concat(userId)).then(function (result) {\n      dispatch(setStatus(result.data));\n    });\n  };\n};\nexport var addNewStatusThunk = function addNewStatusThunk() {\n  return function (dispatch, getState) {\n    var state = getState();\n    axios.put('profile/status', {\n      status: state.profileData.currentStatus\n    }).then(function () {\n      dispatch(changeStatusCreator(false));\n      dispatch(getStatusThunk());\n    });\n  };\n};\nexport var getProfileInformationThunk = function getProfileInformationThunk() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n        var state, data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                state = getState();\n                _context2.next = 3;\n                return profileService.getProfileInformation(state.auth.userInfo.userId);\n\n              case 3:\n                data = _context2.sent;\n                console.log(data);\n                dispatch(getProfileInformationCreator(data));\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var editProfileDataThunk = function editProfileDataThunk(newData) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch, getState) {\n        var state, result, errors;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                state = getState();\n                _context3.next = 3;\n                return profileService.editNewProfileData(newData);\n\n              case 3:\n                result = _context3.sent;\n\n                if (result.data.resultCode === 0) {\n                  dispatch(editProfileDataCreator(newData));\n                  dispatch;\n                } else {\n                  errors = result.data.messages;\n                  console.log(result.data);\n                }\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x4, _x5) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n}; //action creators\n\nvar editRedProfileErrorCreator = function editRedProfileErrorCreator(errors) {\n  return {\n    type: EDIT_ERRORS,\n    errors: errors\n  };\n};\n\nvar editProfileDataCreator = function editProfileDataCreator(newData) {\n  return {\n    type: EDIT_DATA,\n    newData: newData\n  };\n};\n\nvar setStatus = function setStatus(statusFromServer) {\n  return {\n    type: SET_STATUS,\n    status: statusFromServer\n  };\n};\n\nexport var changeStatusCreator = function changeStatusCreator(flag) {\n  return {\n    type: CHANGE_STATUS,\n    flag: flag\n  };\n};\nexport var addCurrentStatusTextCreator = function addCurrentStatusTextCreator(e) {\n  return {\n    type: ADD_CURRENT_STATUS_TEXT,\n    textareaObject: e\n  };\n};\n\nvar getProfileInformationCreator = function getProfileInformationCreator(dataFromServer) {\n  return {\n    type: GET_PROFILE_INFORMATION,\n    data: dataFromServer\n  };\n};\n\nexport var clearUpdatePhotoStatus = function clearUpdatePhotoStatus() {\n  return {\n    type: CLEAR_UPDATE_PHOTO_STATUS\n  };\n};\nexport var clearUpdatePhotoErrorText = function clearUpdatePhotoErrorText() {\n  return {\n    type: CLEAR_UPDATE_PHOTO_ERROR_TEXT\n  };\n};\n\nvar changeUpdatePhotoStatus = function changeUpdatePhotoStatus(updatePhotoStatus, updatePhotoErrorText) {\n  return {\n    type: CHANGE_UPDATE_PHOTO_STATUS,\n    updatePhotoStatus: updatePhotoStatus,\n    updatePhotoErrorText: updatePhotoErrorText\n  };\n};\n\nexport default profilePageReducer;","map":{"version":3,"sources":["C:\\lessons\\React\\kmb-11\\src\\Reducers\\profilePageReducer.js"],"names":["React","axios","profileService","initialStateForProfile","aboutMe","contacts","facebook","github","instagram","mainLink","twitter","vk","website","youtube","photos","small","large","status","lookingForAJob","lookingForAJobDescription","fullName","statusChangeFlag","currentStatus","redProfileError","redProfileSuccess","updatePhotoStatus","updatePhotoErrorText","SET_STATUS","GET_PROFILE_INFORMATION","CHANGE_STATUS","EDIT_DATA","EDIT_ERRORS","ADD_CURRENT_STATUS_TEXT","CLEAR_UPDATE_PHOTO_STATUS","CLEAR_UPDATE_PHOTO_ERROR_TEXT","CHANGE_UPDATE_PHOTO_STATUS","profilePageReducer","state","action","stateCopy","type","flag","textareaObject","target","value","data","newData","errors","updatePhotoSaga","dispatch","updatePhoto","result","resultCode","changeUpdatePhotoStatus","messages","getStatusThunk","getState","userId","auth","userInfo","get","then","setStatus","addNewStatusThunk","put","profileData","changeStatusCreator","getProfileInformationThunk","getProfileInformation","console","log","getProfileInformationCreator","editProfileDataThunk","editNewProfileData","editProfileDataCreator","editRedProfileErrorCreator","statusFromServer","addCurrentStatusTextCreator","e","dataFromServer","clearUpdatePhotoStatus","clearUpdatePhotoErrorText"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from \"../Dall/axios-instance\";\nimport {profileService} from \"../Dall/profile-service\";\n\nlet initialStateForProfile = {\n    aboutMe: \"Информация не указана\",\n    contacts: {\n        facebook: \"\",\n        github: \"\",\n        instagram: \"\",\n        mainLink: \"\",\n        twitter: \"\",\n        vk: \"\",\n        website: \"\",\n        youtube: \"\"\n    },\n    photos: {\n        small: null,\n        large: null\n    },\n    status: \"У вас нет статуса\",\n    lookingForAJob: false,\n    lookingForAJobDescription: 'Ищу работу, знаю это это и это',\n    fullName: null,\n    statusChangeFlag: false,\n    currentStatus: \"\",\n    redProfileError: null,\n    redProfileSuccess: null,\n    updatePhotoStatus: null,\n    updatePhotoErrorText: null\n};\n\nconst SET_STATUS = 'NETWORK/PROFILE/SET_STATUS';\nconst GET_PROFILE_INFORMATION = 'NETWORK/PROFILE/GET_PROFILE_INFORMATION';\nconst CHANGE_STATUS = 'NETWORK/PROFILE/CHANGE_STATUS';\nconst EDIT_DATA = 'NETWORK/PROFILE/EDIT_DATA';\nconst EDIT_ERRORS = 'NETWORK/PROFILE/EDIT_DATA/EDIT_ERRORS';\nconst ADD_CURRENT_STATUS_TEXT = 'NETWORK/PROFILE/ADD_CURRENT_STATUS_TEXT';\nconst CLEAR_UPDATE_PHOTO_STATUS = 'NETWORK/PROFILE/EDIT_DATA/CLEAR_UPDATE_PHOTO_STATUS';\nconst CLEAR_UPDATE_PHOTO_ERROR_TEXT = 'NETWORK/PROFILE/EDIT_DATA/CLEAR_UPDATE_PHOTO_ERROR_TEXT';\nconst CHANGE_UPDATE_PHOTO_STATUS = 'NETWORK/PROFILE/EDIT_DATA/CHANGE_UPDATE_PHOTO_STATUS';\n\nconst profilePageReducer = (state = initialStateForProfile, action) => {\n    let stateCopy = {...state};\n    switch (action.type) {\n        case SET_STATUS:\n            stateCopy.status = action.status\n            stateCopy.currentStatus = action.status\n            return stateCopy\n        case CHANGE_STATUS:\n            stateCopy.statusChangeFlag = action.flag\n            return stateCopy\n        case ADD_CURRENT_STATUS_TEXT:\n            stateCopy.currentStatus = action.textareaObject.target.value\n            return stateCopy\n        case GET_PROFILE_INFORMATION:\n            stateCopy.aboutMe = action.data.aboutMe\n            stateCopy.contacts = {...action.data.contacts}\n            stateCopy.lookingForAJob = action.data.lookingForAJob\n            stateCopy.fullName = action.data.fullName\n            stateCopy.lookingForAJobDescription = action.data.lookingForAJobDescription\n            stateCopy.photos = {...action.data.photos}\n            return stateCopy\n        case EDIT_DATA:\n            stateCopy.aboutMe = action.newData.aboutMe\n            stateCopy.contacts = {...action.newData.contacts}\n            stateCopy.lookingForAJob = action.newData.lookingForAJob\n            stateCopy.fullName = action.newData.fullName\n            stateCopy.lookingForAJobDescription = action.newData.lookingForAJobDescription\n            return stateCopy\n        case EDIT_ERRORS:\n            stateCopy.contacts.redProfileError = action.errors\n            return stateCopy\n        case CLEAR_UPDATE_PHOTO_STATUS:\n            stateCopy.updatePhotoStatus = null\n            return stateCopy\n        case CLEAR_UPDATE_PHOTO_ERROR_TEXT:\n            stateCopy.updatePhotoStatus = null\n            stateCopy.updatePhotoErrorText = null\n            return stateCopy\n        case CHANGE_UPDATE_PHOTO_STATUS:\n            stateCopy.updatePhotoStatus = action.updatePhotoStatus\n            stateCopy.updatePhotoErrorText = action.updatePhotoErrorText\n            return stateCopy\n        default:\n            return state;\n    }\n};\n\n//Saga\n\nexport const updatePhotoSaga = (data) => {\n    return async (dispatch) => {\n        let result = await profileService.updatePhoto(data)\n        if (result.resultCode === 0) {\n            dispatch(changeUpdatePhotoStatus(\"success\"))\n        } else {\n            dispatch(changeUpdatePhotoStatus(\"error\", result.messages))\n        }\n    }\n}\n\n//Thunks\n\nexport const getStatusThunk = () => {\n    return (dispatch, getState) => {\n        let state = getState();\n        let userId = state.auth.userInfo.userId;\n        axios.get(`profile/status/${userId}`).then(\n            result => {\n                dispatch(setStatus(result.data));\n            }\n        )\n    }\n}\n\nexport const addNewStatusThunk = () => {\n    return (dispatch, getState) => {\n        let state = getState();\n        axios.put('profile/status', {status: state.profileData.currentStatus}).then(\n            () => {\n                dispatch(changeStatusCreator(false));\n                dispatch(getStatusThunk())\n            }\n        );\n    }\n}\n\nexport const getProfileInformationThunk = () => {\n    return async (dispatch, getState) => {\n        let state = getState()\n        let data = await profileService.getProfileInformation(state.auth.userInfo.userId)\n        console.log(data)\n        dispatch(getProfileInformationCreator((data)))\n    }\n}\n\nexport const editProfileDataThunk = (newData) => {\n    return async (dispatch, getState) => {\n        let state = getState()\n        let result = await profileService.editNewProfileData(newData)\n        if (result.data.resultCode === 0) {\n            dispatch(editProfileDataCreator(newData))\n            dispatch\n        } else {\n            let errors = result.data.messages;\n            console.log(result.data)\n        }\n\n    }\n}\n\n//action creators\nconst editRedProfileErrorCreator = (errors) => {\n    return {\n        type: EDIT_ERRORS,\n        errors\n    }\n}\n\nconst editProfileDataCreator = (newData) => {\n    return {\n        type: EDIT_DATA,\n        newData\n    }\n}\n\nconst setStatus = (statusFromServer) => {\n    return {\n        type: SET_STATUS,\n        status: statusFromServer\n    }\n}\n\nexport const changeStatusCreator = (flag) => ({\n    type: CHANGE_STATUS,\n    flag: flag\n})\n\nexport const addCurrentStatusTextCreator = (e) => ({\n    type: ADD_CURRENT_STATUS_TEXT,\n    textareaObject: e\n})\n\nconst getProfileInformationCreator = (dataFromServer) => {\n    return {\n        type: GET_PROFILE_INFORMATION,\n        data: dataFromServer\n    }\n}\n\nexport const clearUpdatePhotoStatus = () => {\n    return {type: CLEAR_UPDATE_PHOTO_STATUS}\n}\n\nexport const clearUpdatePhotoErrorText = () => {\n    return {type: CLEAR_UPDATE_PHOTO_ERROR_TEXT}\n}\n\nconst changeUpdatePhotoStatus = (updatePhotoStatus, updatePhotoErrorText) => {\n    return {\n        type: CHANGE_UPDATE_PHOTO_STATUS,\n        updatePhotoStatus,\n        updatePhotoErrorText\n    }\n}\n\n\nexport default profilePageReducer;\n"]},"metadata":{},"sourceType":"module"}