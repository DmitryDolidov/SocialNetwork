{"ast":null,"code":"var _jsxFileName = \"C:\\\\lessons\\\\React\\\\kmb-11\\\\src\\\\Components\\\\Dialogs\\\\Dialogs.js\";\nimport React from 'react';\nimport './Dialogs.css';\nimport CorrespondentComponent from \"./CorrespondentComponent\";\nimport { connect } from 'react-redux';\nimport { Route } from \"react-router\";\nimport DialogsMessageComponent from \"./DialogsMessage\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport DefaultDialogsMessageComponent from \"./DefaultDialogsMessage\";\nimport { chooseDialogOnClickDispatch, chooseDialogOnUrlDispatch } from \"../../store\";\n\nvar DialogsComponent = function DialogsComponent(props) {\n  var idFromUrl = props.match.params.userId;\n  var returnMessages = '';\n  var params = props.location.pathname.split(\"/\");\n\n  if (props.currentCorresspondentId || params.length > 2 && props.dialogMessages[params[params.length - 1]]) {\n    returnMessages = props.dialogMessages[props.currentCorresspondentId || params];\n  } // if(props.currentCorresspondentId) {\n  //     returnMessages = props.dialogMessages[props.currentCorresspondentId].map((el) => {\n  //         return (<DialogsMessageComponent avatar={props.dialogCorrespondents[el.id].avatar}\n  //                                          name={props.dialogCorrespondents[el.id].firstName} message={el.message}/>);\n  //     });\n  // }\n\n\n  var returnDialogCorrespondents = props.dialogCorrespondents.map(function (el) {\n    if (el.id !== 0) {\n      return React.createElement(NavLink, {\n        to: \"/dialogs/\".concat(el.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(CorrespondentComponent, {\n        avatar: el.avatar,\n        name: el.firstName,\n        chooseDialog: props.chooseDialogOnClick,\n        currentCorresspondentId: props.currentCorresspondentId,\n        correspondentId: el.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }));\n    }\n  });\n  return React.createElement(\"div\", {\n    className: 'dialogs-box',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: 'dialogs-titul',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"\\u0414\\u0438\\u0430\\u043B\\u043E\\u0433\\u0438\"), React.createElement(\"div\", {\n    className: \"dialogs-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dialogs-users\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, returnDialogCorrespondents), React.createElement(\"div\", {\n    className: \"dialogs-messages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: '/dialogs/:userId',\n    render: function render() {\n      return returnMessages;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    dialogCorrespondents: state.dialogData.dialogCorrespondents,\n    currentCorresspondentId: state.dialogData.currentCorresspondentId,\n    dialogMessages: state.dialogData.dialogMessages\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    chooseDialogOnClick: function chooseDialogOnClick(corresspondentId) {\n      dispatch(chooseDialogOnClickDispatch(corresspondentId));\n    },\n    chooseDialogOnUrl: function chooseDialogOnUrl(corresspondentId) {\n      dispatch(chooseDialogOnUrlDispatch(corresspondentId));\n    }\n  };\n};\n\nvar ConnectedDialogComponent = withRouter(connect(mapStateToProps, mapDispatchToProps)(DialogsComponent));\nexport default ConnectedDialogComponent;","map":{"version":3,"sources":["C:\\lessons\\React\\kmb-11\\src\\Components\\Dialogs\\Dialogs.js"],"names":["React","CorrespondentComponent","connect","Route","DialogsMessageComponent","NavLink","withRouter","DefaultDialogsMessageComponent","chooseDialogOnClickDispatch","chooseDialogOnUrlDispatch","DialogsComponent","props","idFromUrl","match","params","userId","returnMessages","location","pathname","split","currentCorresspondentId","length","dialogMessages","returnDialogCorrespondents","dialogCorrespondents","map","el","id","avatar","firstName","chooseDialogOnClick","mapStateToProps","state","dialogData","mapDispatchToProps","dispatch","corresspondentId","chooseDialogOnUrl","ConnectedDialogComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Dialogs.css';\nimport CorrespondentComponent from \"./CorrespondentComponent\";\nimport {connect} from 'react-redux';\nimport {Route} from \"react-router\";\nimport DialogsMessageComponent from \"./DialogsMessage\";\nimport {NavLink, withRouter} from \"react-router-dom\";\nimport DefaultDialogsMessageComponent from \"./DefaultDialogsMessage\";\nimport {chooseDialogOnClickDispatch, chooseDialogOnUrlDispatch} from \"../../store\";\n\nconst DialogsComponent = (props) => {\n    let idFromUrl = props.match.params.userId;\n    let returnMessages = '';\n    const params = props.location.pathname.split(\"/\");\n    if(props.currentCorresspondentId || params.length > 2 && props.dialogMessages[params[params.length - 1]]) {\n        returnMessages = props.dialogMessages[props.currentCorresspondentId || params]\n    }\n    // if(props.currentCorresspondentId) {\n    //     returnMessages = props.dialogMessages[props.currentCorresspondentId].map((el) => {\n    //         return (<DialogsMessageComponent avatar={props.dialogCorrespondents[el.id].avatar}\n    //                                          name={props.dialogCorrespondents[el.id].firstName} message={el.message}/>);\n    //     });\n    // }\n    let returnDialogCorrespondents = props.dialogCorrespondents.map((el) => {\n        if(el.id !== 0) {\n            return (<NavLink to={`/dialogs/${el.id }`} ><CorrespondentComponent\n                        avatar={el.avatar} name={el.firstName} chooseDialog={props.chooseDialogOnClick} currentCorresspondentId={props.currentCorresspondentId}\n                        correspondentId={el.id} />\n                    </NavLink>)\n        }\n    });\n\n    return (\n        <div className={'dialogs-box'}>\n            <div className={'dialogs-titul'}>\n                Диалоги\n            </div>\n            <div className={\"dialogs-content\"}>\n                <div className={\"dialogs-users\"}>\n                    {returnDialogCorrespondents}\n                </div>\n                <div className={\"dialogs-messages\"}>\n                    <Route path={'/dialogs/:userId'} render={() => returnMessages }/>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogCorrespondents: state.dialogData.dialogCorrespondents,\n        currentCorresspondentId: state.dialogData.currentCorresspondentId,\n        dialogMessages: state.dialogData.dialogMessages\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        chooseDialogOnClick: (corresspondentId) => {\n            dispatch(\n                chooseDialogOnClickDispatch(corresspondentId)\n            );\n        },\n        chooseDialogOnUrl: (corresspondentId) => {\n            dispatch(\n                chooseDialogOnUrlDispatch(corresspondentId)\n            );\n        }\n    }\n};\n\nconst ConnectedDialogComponent = withRouter(connect(mapStateToProps, mapDispatchToProps)(DialogsComponent));\n\nexport default ConnectedDialogComponent;"]},"metadata":{},"sourceType":"module"}