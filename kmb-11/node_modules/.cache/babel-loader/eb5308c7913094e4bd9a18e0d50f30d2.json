{"ast":null,"code":"import _defineProperty from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\lessons\\\\React\\\\kmb-11\\\\src\\\\Components\\\\Dialogs\\\\DialogsList.js\";\nimport React from 'react';\nimport './Dialogs.css';\nimport { chooseDialogDispatch } from \"../../store\";\nimport { connect } from 'react-redux';\n\nvar DialogsListComponent = function DialogsListComponent(props) {\n  var _React$createElement;\n\n  var currentCorrespondentClass = props.correspondentId === props.currentCorresspondentId;\n\n  if (currentCorrespondentClass) {\n    currentCorrespondentClass = 'currentCorrespondentClass';\n  } else {\n    currentCorrespondentClass = '';\n  }\n\n  ;\n  console.log(currentCorrespondentClass);\n  return React.createElement(\"div\", (_React$createElement = {\n    className: \"correspondent_box\"\n  }, _defineProperty(_React$createElement, \"className\", currentCorrespondentClass), _defineProperty(_React$createElement, \"id\", props.correspondentId), _defineProperty(_React$createElement, \"onClick\", props.chooseDialog), _defineProperty(_React$createElement, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(\"div\", {\n    className: \"correspondent_avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: props.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"correspondent_name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, props.name));\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    chooseDialog: function chooseDialog(corresspondentId) {\n      dispatch(chooseDialogDispatch(corresspondentId));\n    }\n  };\n};\n\nvar ConnectedDialogListComponent = connect(function () {}, mapDispatchToProps)(DialogsListComponent);\nexport default ConnectedDialogListComponent;","map":{"version":3,"sources":["C:\\lessons\\React\\kmb-11\\src\\Components\\Dialogs\\DialogsList.js"],"names":["React","chooseDialogDispatch","connect","DialogsListComponent","props","currentCorrespondentClass","correspondentId","currentCorresspondentId","console","log","chooseDialog","avatar","name","mapDispatchToProps","dispatch","corresspondentId","ConnectedDialogListComponent"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,SAAQC,oBAAR,QAAmC,aAAnC;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,KAAD,EAAW;AAAA;;AAEpC,MAAIC,yBAAyB,GAAGD,KAAK,CAACE,eAAN,KAA0BF,KAAK,CAACG,uBAAhE;;AACA,MAAIF,yBAAJ,EAA+B;AAACA,IAAAA,yBAAyB,GAAG,2BAA5B;AAAwD,GAAxF,MAA8F;AAACA,IAAAA,yBAAyB,GAAG,EAA5B;AAA+B;;AAAA;AAC9HG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,yBAAZ;AACA,SACQ;AAAK,IAAA,SAAS,EAAE;AAAhB,wDAAgDA,yBAAhD,+CAA+ED,KAAK,CAACE,eAArF,oDAA+GF,KAAK,CAACM,YAArH;AAAA;AAAA;AAAA,oFACQ;AAAK,IAAA,SAAS,EAAE,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEN,KAAK,CAACO,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADR,EAIQ;AAAK,IAAA,SAAS,EAAE,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,KAAK,CAACQ,IADX,CAJR,CADR;AAUH,CAfD;;AAiBA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACrC,SAAO;AACHJ,IAAAA,YAAY,EAAE,sBAACK,gBAAD,EAAsB;AAChCD,MAAAA,QAAQ,CACJb,oBAAoB,CAACc,gBAAD,CADhB,CAAR;AAGH;AALE,GAAP;AAOH,CARD;;AAUA,IAAMC,4BAA4B,GAAGd,OAAO,CAAC,YAAI,CAAE,CAAP,EAASW,kBAAT,CAAP,CAAoCV,oBAApC,CAArC;AAEA,eAAea,4BAAf","sourcesContent":["import React from 'react';\nimport './Dialogs.css';\nimport {chooseDialogDispatch} from \"../../store\";\nimport {connect} from 'react-redux';\n\nconst DialogsListComponent = (props) => {\n\n    let currentCorrespondentClass = props.correspondentId === props.currentCorresspondentId;\n    if (currentCorrespondentClass) {currentCorrespondentClass = 'currentCorrespondentClass'} else {currentCorrespondentClass = ''};\n    console.log(currentCorrespondentClass);\n    return (\n            <div className={\"correspondent_box\"} className={currentCorrespondentClass} id={props.correspondentId} onClick={props.chooseDialog}>\n                    <div className={\"correspondent_avatar\"}>\n                        <img src={props.avatar} />\n                    </div>\n                    <div className={\"correspondent_name\"}>\n                        {props.name}\n                    </div>\n            </div>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        chooseDialog: (corresspondentId) => {\n            dispatch(\n                chooseDialogDispatch(corresspondentId)\n            );\n        }\n    }\n};\n\nconst ConnectedDialogListComponent = connect(()=>{}, mapDispatchToProps)(DialogsListComponent);\n\nexport default ConnectedDialogListComponent;"]},"metadata":{},"sourceType":"module"}