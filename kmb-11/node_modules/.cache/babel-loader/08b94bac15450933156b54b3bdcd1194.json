{"ast":null,"code":"import _objectSpread from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { combineReducers, createStore } from \"redux\";\nimport avatar from \"./Components/Profile/img/avatar.jpg\";\nvar initialStateForPost = {\n  messageArray: [{\n    avatar: avatar,\n    post: \"Эй, почему никто не лайкнул в прошлом посте?!\"\n  }, {\n    avatar: avatar,\n    post: \"Ну что?! Давайте лайкать теперь этот пост.\"\n  }],\n  currentPost: ''\n};\nvar ADD_POST = 'NETWORK/PROFILE/CREATE_POSTS/ADD_POST';\nvar CHANGE_NEW_POST = 'NETWORK/PROFILE/CREATE_POSTS/CHANGE_NEW_POST';\nexport var changeCurrentPost = function changeCurrentPost(currentText) {\n  return {\n    type: CHANGE_NEW_POST,\n    newPost: currentText\n  };\n};\n\nvar addPostReducer = function addPostReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateForPost;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      var stateCopy = {\n        messageArray: _toConsumableArray(state.messageArray)\n      };\n      stateCopy.messageArray.push({\n        avatar: avatar,\n        post: state.currentPost\n      });\n      stateCopy.currentPost = \"\";\n      return stateCopy;\n\n    case CHANGE_NEW_POST:\n      var stateCopy2 = _objectSpread({}, state);\n\n      stateCopy2.currentPost = action.newPost;\n      return stateCopy2;\n\n    default:\n      return state;\n  }\n};\n\nvar superReducer = combineReducers({\n  message: addPostReducer\n});\nvar store = createStore(superReducer);\nexport default store;","map":{"version":3,"sources":["C:\\lessons\\React\\kmb-11\\src\\store.js"],"names":["combineReducers","createStore","avatar","initialStateForPost","messageArray","post","currentPost","ADD_POST","CHANGE_NEW_POST","changeCurrentPost","currentText","type","newPost","addPostReducer","state","action","stateCopy","push","stateCopy2","superReducer","message","store"],"mappings":";;AAAA,SAAQA,eAAR,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AAEA,IAAIC,mBAAmB,GAAG;AACtBC,EAAAA,YAAY,EAAE,CACV;AAACF,IAAAA,MAAM,EAAEA,MAAT;AAAiBG,IAAAA,IAAI,EAAE;AAAvB,GADU,EAEV;AAACH,IAAAA,MAAM,EAAEA,MAAT;AAAiBG,IAAAA,IAAI,EAAE;AAAvB,GAFU,CADQ;AAKtBC,EAAAA,WAAW,EAAE;AALS,CAA1B;AAQA,IAAMC,QAAQ,GAAG,uCAAjB;AACA,IAAMC,eAAe,GAAG,8CAAxB;AACA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,WAAD,EAAiB;AAC9C,SAAO;AACHC,IAAAA,IAAI,EAAEH,eADH;AAEHI,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;;AAOP,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAyC;AAAA,MAAxCC,KAAwC,uEAAhCX,mBAAgC;AAAA,MAAXY,MAAW;;AAC5D,UAAQA,MAAM,CAACJ,IAAf;AACI,SAAKJ,QAAL;AACI,UAAIS,SAAS,GAAG;AAACZ,QAAAA,YAAY,qBAAMU,KAAK,CAACV,YAAZ;AAAb,OAAhB;AACAY,MAAAA,SAAS,CAACZ,YAAV,CAAuBa,IAAvB,CAA4B;AAACf,QAAAA,MAAM,EAAEA,MAAT;AAAiBG,QAAAA,IAAI,EAAES,KAAK,CAACR;AAA7B,OAA5B;AACAU,MAAAA,SAAS,CAACV,WAAV,GAAwB,EAAxB;AACA,aAAOU,SAAP;;AACJ,SAAKR,eAAL;AACI,UAAIU,UAAU,qBAAOJ,KAAP,CAAd;;AACAI,MAAAA,UAAU,CAACZ,WAAX,GAAyBS,MAAM,CAACH,OAAhC;AACA,aAAOM,UAAP;;AACJ;AACI,aAAOJ,KAAP;AAXR;AAaH,CAdD;;AAeA,IAAMK,YAAY,GAAGnB,eAAe,CAAC;AACjCoB,EAAAA,OAAO,EAAEP;AADwB,CAAD,CAApC;AAKA,IAAMQ,KAAK,GAAGpB,WAAW,CAACkB,YAAD,CAAzB;AAEA,eAAeE,KAAf","sourcesContent":["import {combineReducers, createStore} from \"redux\";\nimport avatar from \"./Components/Profile/img/avatar.jpg\";\n\nlet initialStateForPost = {\n    messageArray: [\n        {avatar: avatar, post: \"Эй, почему никто не лайкнул в прошлом посте?!\"},\n        {avatar: avatar, post: \"Ну что?! Давайте лайкать теперь этот пост.\"}\n    ],\n    currentPost: ''\n};\n\nconst ADD_POST = 'NETWORK/PROFILE/CREATE_POSTS/ADD_POST';\nconst CHANGE_NEW_POST = 'NETWORK/PROFILE/CREATE_POSTS/CHANGE_NEW_POST';\nexport const changeCurrentPost = (currentText) => {\n    return {\n        type: CHANGE_NEW_POST,\n        newPost: currentText\n    }\n}\n\nconst addPostReducer = (state = initialStateForPost, action) => {\n    switch (action.type) {\n        case ADD_POST:\n            let stateCopy = {messageArray: [...state.messageArray]};\n            stateCopy.messageArray.push({avatar: avatar, post: state.currentPost});\n            stateCopy.currentPost = \"\";\n            return stateCopy;\n        case CHANGE_NEW_POST:\n            let stateCopy2 = {...state};\n            stateCopy2.currentPost = action.newPost;\n            return stateCopy2;\n        default:\n            return state;\n    }\n};\nconst superReducer = combineReducers({\n    message: addPostReducer\n});\n\n\nconst store = createStore(superReducer);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}