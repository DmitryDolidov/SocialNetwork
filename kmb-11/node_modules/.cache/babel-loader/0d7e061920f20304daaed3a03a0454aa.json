{"ast":null,"code":"import _toConsumableArray from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\lessons\\\\React\\\\kmb-11\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport AppComponent from './Components/App/App';\nimport avatar from \"./Components/Profile/img/avatar.jpg\";\nimport PostsComponent from \"./Components/Profile/Posts\"; //state\n\nvar state = {\n  message: {\n    messageArray: [{\n      avatar: avatar,\n      post: \"Эй, почему никто не лайкнул в прошлом посте?!\"\n    }, {\n      avatar: avatar,\n      post: \"Ну что?! Давайте лайкать теперь этот пост.\"\n    }]\n  }\n};\nvar posts = state.message.messageArray.map(function (el) {\n  return React.createElement(PostsComponent, {\n    avatar: el.avatar,\n    post: el.post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  });\n});\n\nvar addPost = function addPost(newPost) {\n  state.message.messageArray = _toConsumableArray(state.message.messageArray).concat([{\n    avatar: avatar,\n    post: newPost\n  }]);\n  renderAllPage();\n};\n\nvar renderAllPage = function renderAllPage() {\n  ReactDOM.render(React.createElement(AppComponent, {\n    posts: posts,\n    addPost: addPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), document.getElementById('page'));\n};\n\nrenderAllPage();\nserviceWorker.unregister();","map":{"version":3,"sources":["C:\\lessons\\React\\kmb-11\\src\\index.js"],"names":["React","ReactDOM","serviceWorker","AppComponent","avatar","PostsComponent","state","message","messageArray","post","posts","map","el","addPost","newPost","renderAllPage","render","document","getElementById","unregister"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,OAAOC,cAAP,MAA2B,4BAA3B,C,CAEA;;AACA,IAAIC,KAAK,GAAG;AACRC,EAAAA,OAAO,EAAE;AACLC,IAAAA,YAAY,EAAG,CACX;AAACJ,MAAAA,MAAM,EAAEA,MAAT;AAAiBK,MAAAA,IAAI,EAAE;AAAvB,KADW,EAEX;AAACL,MAAAA,MAAM,EAAEA,MAAT;AAAiBK,MAAAA,IAAI,EAAE;AAAvB,KAFW;AADV;AADD,CAAZ;AASA,IAAIC,KAAK,GAAGJ,KAAK,CAACC,OAAN,CAAcC,YAAd,CAA2BG,GAA3B,CAA+B,UAACC,EAAD,EAAO;AAC9C,SAAO,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEA,EAAE,CAACR,MAA3B;AAAmC,IAAA,IAAI,EAAEQ,EAAE,CAACH,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAFW,CAAZ;;AAKA,IAAMI,OAAO,GAAG,SAAVA,OAAU,CAACC,OAAD,EAAa;AACzBR,EAAAA,KAAK,CAACC,OAAN,CAAcC,YAAd,sBAAiCF,KAAK,CAACC,OAAN,CAAcC,YAA/C,UAA6D;AAACJ,IAAAA,MAAM,EAAEA,MAAT;AAAiBK,IAAAA,IAAI,EAAEK;AAAvB,GAA7D;AACAC,EAAAA,aAAa;AAChB,CAHD;;AAKA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxBd,EAAAA,QAAQ,CAACe,MAAT,CAAgB,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEN,KAArB;AAA4B,IAAA,OAAO,EAAEG,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,EAAkEI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAlE;AACH,CAFD;;AAIAH,aAAa;AAEbb,aAAa,CAACiB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport AppComponent from './Components/App/App';\nimport avatar from \"./Components/Profile/img/avatar.jpg\";\nimport PostsComponent from \"./Components/Profile/Posts\";\n\n//state\nlet state = {\n    message: {\n        messageArray : [\n            {avatar: avatar, post: \"Эй, почему никто не лайкнул в прошлом посте?!\"},\n            {avatar: avatar, post: \"Ну что?! Давайте лайкать теперь этот пост.\"}\n        ],\n    }\n};\n\nlet posts = state.message.messageArray.map((el)=> {\n    return <PostsComponent avatar={el.avatar} post={el.post}/>\n});\n\n\nconst addPost = (newPost) => {\n    state.message.messageArray = [...state.message.messageArray, {avatar: avatar, post: newPost}];\n    renderAllPage();\n};\n\nconst renderAllPage = () => {\n    ReactDOM.render(<AppComponent posts={posts} addPost={addPost} />, document.getElementById('page'));\n};\n\nrenderAllPage();\n\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}