{"ast":null,"code":"import _objectSpread from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport React from 'react';\nimport axios from \"../Dall/axios-instance\";\nvar initialStateForAuth = {\n  logInState: false,\n  userInfo: {\n    userId: null,\n    userName: null,\n    avatarUrl: ''\n  }\n};\nvar SET_LOGIN_STATE = 'NETWORK/AUTH/SET_LOGIN_STATE';\nvar SET_ME_DATA = 'NETWORK/AUTH/SET_ME_DATA';\n\nvar authReducer = function authReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateForAuth;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  var stateCopy = _objectSpread({}, state);\n\n  switch (action.type) {\n    case SET_LOGIN_STATE:\n      stateCopy.logInState = action.serverLogInState;\n      return stateCopy;\n\n    case SET_ME_DATA:\n      stateCopy.userInfo.userId = action.userId;\n      stateCopy.userInfo.userName = action.userName;\n\n    default:\n      return state;\n  }\n};\n\nexport var meThunk = function meThunk() {\n  return function (dispatch) {\n    axios.get('auth/me').then(function (result) {\n      if (result.data.resultCode === 0) {\n        dispatch(setLogInState(true));\n        dispatch(setMeData(result.data.data.id, result.data.data.login));\n      }\n    });\n  };\n}; //action creaters\n\nexport var setLogInState = function setLogInState(serverLogInState) {\n  return {\n    type: SET_LOGIN_STATE,\n    serverLogInState: serverLogInState\n  };\n};\nexport var setMeData = function setMeData(userId, userName, avatarUrl) {\n  return {\n    type: SET_ME_DATA,\n    userId: userId,\n    userName: userName,\n    avatarUrl: avatarUrl\n  };\n};\nexport default authReducer;","map":{"version":3,"sources":["C:\\lessons\\React\\kmb-11\\src\\Reducers\\authReducer.js"],"names":["React","axios","initialStateForAuth","logInState","userInfo","userId","userName","avatarUrl","SET_LOGIN_STATE","SET_ME_DATA","authReducer","state","action","stateCopy","type","serverLogInState","meThunk","dispatch","get","then","result","data","resultCode","setLogInState","setMeData","id","login"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,IAAIC,mBAAmB,GAAG;AACtBC,EAAAA,UAAU,EAAE,KADU;AAEtBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,MAAM,EAAE,IADF;AAENC,IAAAA,QAAQ,EAAE,IAFJ;AAGNC,IAAAA,SAAS,EAAE;AAHL;AAFY,CAA1B;AASA,IAAMC,eAAe,GAAG,8BAAxB;AACA,IAAMC,WAAW,GAAG,0BAApB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAyC;AAAA,MAAxCC,KAAwC,uEAAhCT,mBAAgC;AAAA,MAAXU,MAAW;;AACzD,MAAIC,SAAS,qBAAKF,KAAL,CAAb;;AACA,UAAQC,MAAM,CAACE,IAAf;AACI,SAAKN,eAAL;AACIK,MAAAA,SAAS,CAACV,UAAV,GAAuBS,MAAM,CAACG,gBAA9B;AACA,aAAOF,SAAP;;AACJ,SAAKJ,WAAL;AACII,MAAAA,SAAS,CAACT,QAAV,CAAmBC,MAAnB,GAA4BO,MAAM,CAACP,MAAnC;AACAQ,MAAAA,SAAS,CAACT,QAAV,CAAmBE,QAAnB,GAA8BM,MAAM,CAACN,QAArC;;AACJ;AACI,aAAOK,KAAP;AARR;AAUH,CAZD;;AAcA,OAAO,IAAMK,OAAO,GAAG,SAAVA,OAAU,GAAM;AACzB,SAAO,UAACC,QAAD,EAAc;AACjBhB,IAAAA,KAAK,CAACiB,GAAN,CAAU,SAAV,EACKC,IADL,CACU,UAAAC,MAAM,EAAI;AACZ,UAAGA,MAAM,CAACC,IAAP,CAAYC,UAAZ,KAA2B,CAA9B,EAAiC;AAC7BL,QAAAA,QAAQ,CAACM,aAAa,CAAC,IAAD,CAAd,CAAR;AACAN,QAAAA,QAAQ,CAACO,SAAS,CAACJ,MAAM,CAACC,IAAP,CAAYA,IAAZ,CAAiBI,EAAlB,EAAsBL,MAAM,CAACC,IAAP,CAAYA,IAAZ,CAAiBK,KAAvC,CAAV,CAAR;AACP;AACJ,KAND;AAOH,GARD;AASH,CAVM,C,CAYP;;AAEA,OAAO,IAAMH,aAAa,GAAG,SAAhBA,aAAgB,CAACR,gBAAD;AAAA,SAAuB;AAChDD,IAAAA,IAAI,EAAEN,eAD0C;AAEhDO,IAAAA,gBAAgB,EAAEA;AAF8B,GAAvB;AAAA,CAAtB;AAKP,OAAO,IAAMS,SAAS,GAAG,SAAZA,SAAY,CAACnB,MAAD,EAASC,QAAT,EAAmBC,SAAnB;AAAA,SAAkC;AACvDO,IAAAA,IAAI,EAAEL,WADiD;AAEvDJ,IAAAA,MAAM,EAANA,MAFuD;AAGvDC,IAAAA,QAAQ,EAARA,QAHuD;AAIvDC,IAAAA,SAAS,EAATA;AAJuD,GAAlC;AAAA,CAAlB;AAOP,eAAeG,WAAf","sourcesContent":["import React from 'react';\nimport axios from \"../Dall/axios-instance\";\n\nlet initialStateForAuth = {\n    logInState: false,\n    userInfo: {\n        userId: null,\n        userName: null,\n        avatarUrl: ''\n    }\n};\n\nconst SET_LOGIN_STATE = 'NETWORK/AUTH/SET_LOGIN_STATE';\nconst SET_ME_DATA = 'NETWORK/AUTH/SET_ME_DATA';\n\nconst authReducer = (state = initialStateForAuth, action) => {\n    let stateCopy={...state}\n    switch (action.type) {\n        case SET_LOGIN_STATE:\n            stateCopy.logInState = action.serverLogInState;\n            return stateCopy;\n        case SET_ME_DATA:\n            stateCopy.userInfo.userId = action.userId;\n            stateCopy.userInfo.userName = action.userName;\n        default:\n            return state;\n    }\n};\n\nexport const meThunk = () => {\n    return (dispatch) => {\n        axios.get('auth/me')\n            .then(result => {\n                if(result.data.resultCode === 0) {\n                    dispatch(setLogInState(true))\n                    dispatch(setMeData(result.data.data.id, result.data.data.login))\n            }\n        });\n    };\n};\n\n//action creaters\n\nexport const setLogInState = (serverLogInState) => ({\n    type: SET_LOGIN_STATE,\n    serverLogInState: serverLogInState\n});\n\nexport const setMeData = (userId, userName, avatarUrl) => ({\n    type: SET_ME_DATA,\n    userId,\n    userName,\n    avatarUrl\n})\n\nexport default authReducer;\n"]},"metadata":{},"sourceType":"module"}