{"ast":null,"code":"import _toConsumableArray from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport React from 'react';\nimport avatar from \"../Components/Profile/img/avatar.jpg\";\nimport axios from \"../Dall/axios-instance\";\nvar initialStateForProfile = {\n  users: [{\n    avatar: avatar,\n    firstName: 'Иван',\n    secondName: 'Стечкин',\n    birthday: '12 января 1990',\n    city: 'Минск',\n    education: 'ВКА им. Можайского',\n    site: 'it-kamasutra.com',\n    status: 'нет'\n  }]\n};\nvar SET_STATUS = 'NETWORK/PROFILE/GET_STATUS';\n\nvar profilePageReducer = function profilePageReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateForProfile;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  var stateCopy = _objectSpread({}, state);\n\n  stateCopy.users = _toConsumableArray(state.users);\n  console.log(stateCopy);\n\n  switch (action.type) {\n    case SET_STATUS:\n      stateCopy.users.status = action.status;\n      return stateCopy;\n\n    default:\n      return state;\n  }\n};\n\nexport var getStatusThunk = function getStatusThunk() {\n  return function (dispatch, getState) {\n    var state = getState();\n    console.log(state.auth.userInfo);\n    var userId = state.auth.userInfo.userId;\n    axios.get(\"profile/status/\".concat(userId)).then(function (result) {// console.log(result)\n      // dispatch (setStatus(result))\n    });\n  };\n};\n\nvar setStatus = function setStatus(statusFromServer) {\n  return {\n    type: SET_STATUS,\n    status: statusFromServer\n  };\n};\n\nexport default profilePageReducer;","map":{"version":3,"sources":["C:\\lessons\\React\\kmb-11\\src\\Reducers\\profilePageReducer.js"],"names":["React","avatar","axios","initialStateForProfile","users","firstName","secondName","birthday","city","education","site","status","SET_STATUS","profilePageReducer","state","action","stateCopy","console","log","type","getStatusThunk","dispatch","getState","auth","userInfo","userId","get","then","result","setStatus","statusFromServer"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,IAAIC,sBAAsB,GAAG;AACzBC,EAAAA,KAAK,EAAE,CACH;AACIH,IAAAA,MAAM,EAAEA,MADZ;AAEII,IAAAA,SAAS,EAAE,MAFf;AAGIC,IAAAA,UAAU,EAAE,SAHhB;AAIIC,IAAAA,QAAQ,EAAE,gBAJd;AAKIC,IAAAA,IAAI,EAAE,OALV;AAMIC,IAAAA,SAAS,EAAE,oBANf;AAOIC,IAAAA,IAAI,EAAE,kBAPV;AAQIC,IAAAA,MAAM,EAAE;AARZ,GADG;AADkB,CAA7B;AAeA,IAAMC,UAAU,GAAG,4BAAnB;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAA4C;AAAA,MAA3CC,KAA2C,uEAAnCX,sBAAmC;AAAA,MAAXY,MAAW;;AACnE,MAAIC,SAAS,qBAAOF,KAAP,CAAb;;AACAE,EAAAA,SAAS,CAACZ,KAAV,sBAAsBU,KAAK,CAACV,KAA5B;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;;AACA,UAAQD,MAAM,CAACI,IAAf;AACI,SAAKP,UAAL;AACII,MAAAA,SAAS,CAACZ,KAAV,CAAgBO,MAAhB,GAAyBI,MAAM,CAACJ,MAAhC;AACA,aAAOK,SAAP;;AACJ;AACI,aAAOF,KAAP;AALR;AAOH,CAXD;;AAaA,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAChC,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC3B,QAAIR,KAAK,GAAGQ,QAAQ,EAApB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACS,IAAN,CAAWC,QAAvB;AACA,QAAIC,MAAM,GAAGX,KAAK,CAACS,IAAN,CAAWC,QAAX,CAAoBC,MAAjC;AACAvB,IAAAA,KAAK,CAACwB,GAAN,0BAA4BD,MAA5B,GAAsCE,IAAtC,CACI,UAAAC,MAAM,EAAI,CACN;AACA;AACH,KAJL;AAMH,GAVD;AAWH,CAZM;;AAcP,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,gBAAD,EAAsB;AACpC,SAAO;AACHX,IAAAA,IAAI,EAAEP,UADH;AAEHD,IAAAA,MAAM,EAAEmB;AAFL,GAAP;AAIH,CALD;;AAOA,eAAejB,kBAAf","sourcesContent":["import React from 'react';\nimport avatar from \"../Components/Profile/img/avatar.jpg\";\nimport axios from \"../Dall/axios-instance\";\n\nlet initialStateForProfile = {\n    users: [\n        {\n            avatar: avatar,\n            firstName: 'Иван',\n            secondName: 'Стечкин',\n            birthday: '12 января 1990',\n            city: 'Минск',\n            education: 'ВКА им. Можайского',\n            site: 'it-kamasutra.com',\n            status: 'нет'\n        }\n    ]\n};\n\nconst SET_STATUS = 'NETWORK/PROFILE/GET_STATUS';\n\nconst profilePageReducer = (state = initialStateForProfile, action) => {\n    let stateCopy = {...state};\n    stateCopy.users = [...state.users];\n    console.log(stateCopy);\n    switch (action.type) {\n        case SET_STATUS:\n            stateCopy.users.status = action.status\n            return stateCopy\n        default:\n            return state;\n    }\n};\n\nexport const getStatusThunk = () => {\n    return (dispatch, getState) => {\n        let state = getState();\n        console.log(state.auth.userInfo);\n        let userId = state.auth.userInfo.userId;\n        axios.get(`profile/status/${userId}`).then (\n            result => {\n                // console.log(result)\n                // dispatch (setStatus(result))\n            }\n        )\n    }\n}\n\nconst setStatus = (statusFromServer) => {\n    return {\n        type: SET_STATUS,\n        status: statusFromServer\n    }\n}\n\nexport default profilePageReducer;\n"]},"metadata":{},"sourceType":"module"}