{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport React from 'react';\nimport axios from \"../Dall/axios-instance\";\nimport { profileService } from \"../Dall/profile-service\";\nvar initialStateForProfile = {\n  aboutMe: \"Информация не указана\",\n  contacts: {\n    facebook: \"\",\n    github: \"\",\n    instagram: \"\",\n    mainLink: \"\",\n    twitter: \"\",\n    vk: \"\",\n    website: \"\",\n    youtube: \"\"\n  },\n  photos: {\n    small: null,\n    large: null\n  },\n  status: \"У вас нет статуса\",\n  lookingForAJob: false,\n  lookingForAJobDescription: 'Ищу работу, знаю это это и это',\n  fullName: null,\n  statusChangeFlag: false,\n  currentStatus: \"\",\n  editDataErrorText: null,\n  editDataStatus: null,\n  updatePhotoStatus: null,\n  updatePhotoErrorText: null\n};\nvar SET_STATUS = 'NETWORK/PROFILE/SET_STATUS';\nvar GET_PROFILE_INFORMATION = 'NETWORK/PROFILE/GET_PROFILE_INFORMATION';\nvar CHANGE_STATUS = 'NETWORK/PROFILE/CHANGE_STATUS';\nvar EDIT_DATA = 'NETWORK/PROFILE/EDIT_DATA';\nvar EDIT_DATA_STATUS = 'NETWORK/PROFILE/EDIT_DATA_STATUS';\nvar EDIT_ERRORS = 'NETWORK/PROFILE/EDIT_DATA/EDIT_ERRORS';\nvar ADD_CURRENT_STATUS_TEXT = 'NETWORK/PROFILE/ADD_CURRENT_STATUS_TEXT';\nvar CHANGE_UPDATE_PHOTO_STATUS = 'NETWORK/PROFILE/EDIT_DATA/CHANGE_UPDATE_PHOTO_STATUS';\n\nvar profilePageReducer = function profilePageReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateForProfile;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  var stateCopy = _objectSpread({}, state);\n\n  switch (action.type) {\n    case SET_STATUS:\n      stateCopy.status = action.status;\n      stateCopy.currentStatus = action.status;\n      return stateCopy;\n\n    case CHANGE_STATUS:\n      stateCopy.statusChangeFlag = action.flag;\n      return stateCopy;\n\n    case ADD_CURRENT_STATUS_TEXT:\n      stateCopy.currentStatus = action.textareaObject.target.value;\n      return stateCopy;\n\n    case GET_PROFILE_INFORMATION:\n      stateCopy.aboutMe = action.data.aboutMe;\n      stateCopy.contacts = _objectSpread({}, action.data.contacts);\n      stateCopy.lookingForAJob = action.data.lookingForAJob;\n      stateCopy.fullName = action.data.fullName;\n      stateCopy.lookingForAJobDescription = action.data.lookingForAJobDescription;\n      stateCopy.photos = _objectSpread({}, action.data.photos);\n      return stateCopy;\n\n    case EDIT_DATA:\n      stateCopy.aboutMe = action.newData.aboutMe;\n      stateCopy.contacts = _objectSpread({}, action.newData.contacts);\n      stateCopy.lookingForAJob = action.newData.lookingForAJob;\n      stateCopy.fullName = action.newData.fullName;\n      stateCopy.lookingForAJobDescription = action.newData.lookingForAJobDescription;\n      return stateCopy;\n\n    case EDIT_DATA_STATUS:\n      stateCopy.editDataStatus = action.editDataStatus;\n      stateCopy.editDataErrorText = action.editDataErrorText;\n      return stateCopy;\n\n    case CHANGE_UPDATE_PHOTO_STATUS:\n      stateCopy.updatePhotoStatus = action.updatePhotoStatus;\n      stateCopy.updatePhotoErrorText = action.updatePhotoErrorText;\n      return stateCopy;\n\n    default:\n      return state;\n  }\n}; //Saga\n\n\nexport var updatePhotoThunk = function updatePhotoThunk(data) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return profileService.updatePhoto(data);\n\n              case 2:\n                result = _context.sent;\n\n                if (result.resultCode === 0) {\n                  dispatch(changeUpdatePhotoStatusCreator(\"success\"));\n                } else {\n                  dispatch(changeUpdatePhotoStatusCreator(\"error\", result.messages));\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}; //Thunks\n\nexport var getStatusThunk = function getStatusThunk() {\n  return function (dispatch, getState) {\n    var state = getState();\n    var userId = state.auth.userInfo.userId;\n    axios.get(\"profile/status/\".concat(userId)).then(function (result) {\n      dispatch(setStatus(result.data));\n    });\n  };\n};\nexport var addNewStatusThunk = function addNewStatusThunk() {\n  return function (dispatch, getState) {\n    var state = getState();\n    axios.put('profile/status', {\n      status: state.profileData.currentStatus\n    }).then(function () {\n      dispatch(changeStatusCreator(false));\n      var newState = getState();\n      console.log(newState.profileData);\n      dispatch(getStatusThunk());\n    });\n  };\n};\nexport var getProfileInformationThunk = function getProfileInformationThunk() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n        var state, data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                state = getState();\n                _context2.next = 3;\n                return profileService.getProfileInformation(state.auth.userInfo.userId);\n\n              case 3:\n                data = _context2.sent;\n                dispatch(getProfileInformationCreator(data));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var editProfileDataThunk = function editProfileDataThunk(newData) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch, getState) {\n        var state, result, errors;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                state = getState();\n                _context3.next = 3;\n                return profileService.editNewProfileData(newData);\n\n              case 3:\n                result = _context3.sent;\n\n                if (result.data.resultCode === 0) {\n                  dispatch(editProfileDataCreator(newData));\n                  dispatch(editDataStatusCreator(\"success\"));\n                } else {\n                  errors = result.data.messages;\n                  dispatch(editDataStatusCreator(\"error\", errors));\n                }\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x4, _x5) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n}; //action creators\n\nexport var editDataStatusCreator = function editDataStatusCreator(editDataStatus, editDataErrorText) {\n  return {\n    type: EDIT_DATA_STATUS,\n    editDataStatus: editDataStatus,\n    editDataErrorText: editDataErrorText\n  };\n};\n\nvar editProfileDataCreator = function editProfileDataCreator(newData) {\n  return {\n    type: EDIT_DATA,\n    newData: newData\n  };\n};\n\nvar setStatus = function setStatus(statusFromServer) {\n  return {\n    type: SET_STATUS,\n    status: statusFromServer\n  };\n};\n\nexport var changeStatusCreator = function changeStatusCreator(flag) {\n  return {\n    type: CHANGE_STATUS,\n    flag: flag\n  };\n};\nexport var addCurrentStatusTextCreator = function addCurrentStatusTextCreator(e) {\n  return {\n    type: ADD_CURRENT_STATUS_TEXT,\n    textareaObject: e\n  };\n};\n\nvar getProfileInformationCreator = function getProfileInformationCreator(dataFromServer) {\n  return {\n    type: GET_PROFILE_INFORMATION,\n    data: dataFromServer\n  };\n};\n\nexport var changeUpdatePhotoStatusCreator = function changeUpdatePhotoStatusCreator(updatePhotoStatus, updatePhotoErrorText) {\n  return {\n    type: CHANGE_UPDATE_PHOTO_STATUS,\n    updatePhotoStatus: updatePhotoStatus,\n    updatePhotoErrorText: updatePhotoErrorText\n  };\n};\nexport default profilePageReducer;","map":{"version":3,"sources":["C:\\lessons\\React\\kmb-11\\src\\Reducers\\profilePageReducer.js"],"names":["React","axios","profileService","initialStateForProfile","aboutMe","contacts","facebook","github","instagram","mainLink","twitter","vk","website","youtube","photos","small","large","status","lookingForAJob","lookingForAJobDescription","fullName","statusChangeFlag","currentStatus","editDataErrorText","editDataStatus","updatePhotoStatus","updatePhotoErrorText","SET_STATUS","GET_PROFILE_INFORMATION","CHANGE_STATUS","EDIT_DATA","EDIT_DATA_STATUS","EDIT_ERRORS","ADD_CURRENT_STATUS_TEXT","CHANGE_UPDATE_PHOTO_STATUS","profilePageReducer","state","action","stateCopy","type","flag","textareaObject","target","value","data","newData","updatePhotoThunk","dispatch","updatePhoto","result","resultCode","changeUpdatePhotoStatusCreator","messages","getStatusThunk","getState","userId","auth","userInfo","get","then","setStatus","addNewStatusThunk","put","profileData","changeStatusCreator","newState","console","log","getProfileInformationThunk","getProfileInformation","getProfileInformationCreator","editProfileDataThunk","editNewProfileData","editProfileDataCreator","editDataStatusCreator","errors","statusFromServer","addCurrentStatusTextCreator","e","dataFromServer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from \"../Dall/axios-instance\";\nimport {profileService} from \"../Dall/profile-service\";\n\nlet initialStateForProfile = {\n    aboutMe: \"Информация не указана\",\n    contacts: {\n        facebook: \"\",\n        github: \"\",\n        instagram: \"\",\n        mainLink: \"\",\n        twitter: \"\",\n        vk: \"\",\n        website: \"\",\n        youtube: \"\"\n    },\n    photos: {\n        small: null,\n        large: null\n    },\n    status: \"У вас нет статуса\",\n    lookingForAJob: false,\n    lookingForAJobDescription: 'Ищу работу, знаю это это и это',\n    fullName: null,\n    statusChangeFlag: false,\n    currentStatus: \"\",\n    editDataErrorText: null,\n    editDataStatus: null,\n    updatePhotoStatus: null,\n    updatePhotoErrorText: null\n};\n\nconst SET_STATUS = 'NETWORK/PROFILE/SET_STATUS';\nconst GET_PROFILE_INFORMATION = 'NETWORK/PROFILE/GET_PROFILE_INFORMATION';\nconst CHANGE_STATUS = 'NETWORK/PROFILE/CHANGE_STATUS';\nconst EDIT_DATA = 'NETWORK/PROFILE/EDIT_DATA';\nconst EDIT_DATA_STATUS = 'NETWORK/PROFILE/EDIT_DATA_STATUS';\nconst EDIT_ERRORS = 'NETWORK/PROFILE/EDIT_DATA/EDIT_ERRORS';\nconst ADD_CURRENT_STATUS_TEXT = 'NETWORK/PROFILE/ADD_CURRENT_STATUS_TEXT';\nconst CHANGE_UPDATE_PHOTO_STATUS = 'NETWORK/PROFILE/EDIT_DATA/CHANGE_UPDATE_PHOTO_STATUS';\n\nconst profilePageReducer = (state = initialStateForProfile, action) => {\n    let stateCopy = {...state};\n    switch (action.type) {\n        case SET_STATUS:\n            stateCopy.status = action.status\n            stateCopy.currentStatus = action.status\n            return stateCopy\n        case CHANGE_STATUS:\n            stateCopy.statusChangeFlag = action.flag\n            return stateCopy\n        case ADD_CURRENT_STATUS_TEXT:\n            stateCopy.currentStatus = action.textareaObject.target.value\n            return stateCopy\n        case GET_PROFILE_INFORMATION:\n            stateCopy.aboutMe = action.data.aboutMe\n            stateCopy.contacts = {...action.data.contacts}\n            stateCopy.lookingForAJob = action.data.lookingForAJob\n            stateCopy.fullName = action.data.fullName\n            stateCopy.lookingForAJobDescription = action.data.lookingForAJobDescription\n            stateCopy.photos = {...action.data.photos}\n            return stateCopy\n        case EDIT_DATA:\n            stateCopy.aboutMe = action.newData.aboutMe\n            stateCopy.contacts = {...action.newData.contacts}\n            stateCopy.lookingForAJob = action.newData.lookingForAJob\n            stateCopy.fullName = action.newData.fullName\n            stateCopy.lookingForAJobDescription = action.newData.lookingForAJobDescription\n            return stateCopy\n        case EDIT_DATA_STATUS:\n            stateCopy.editDataStatus = action.editDataStatus\n            stateCopy.editDataErrorText = action.editDataErrorText\n            return stateCopy\n        case CHANGE_UPDATE_PHOTO_STATUS:\n            stateCopy.updatePhotoStatus = action.updatePhotoStatus\n            stateCopy.updatePhotoErrorText = action.updatePhotoErrorText\n            return stateCopy\n        default:\n            return state;\n    }\n};\n\n//Saga\n\nexport const updatePhotoThunk = (data) => {\n    return async (dispatch) => {\n        let result = await profileService.updatePhoto(data)\n        if (result.resultCode === 0) {\n            dispatch(changeUpdatePhotoStatusCreator(\"success\"))\n        } else {\n            dispatch(changeUpdatePhotoStatusCreator(\"error\", result.messages))\n        }\n    }\n}\n\n//Thunks\n\nexport const getStatusThunk = () => {\n    return (dispatch, getState) => {\n        let state = getState();\n        let userId = state.auth.userInfo.userId;\n        axios.get(`profile/status/${userId}`).then(\n            result => {\n                dispatch(setStatus(result.data));\n            }\n        )\n    }\n}\n\nexport const addNewStatusThunk = () => {\n    return (dispatch, getState) => {\n        let state = getState();\n        axios.put('profile/status', {status: state.profileData.currentStatus}).then(\n            () => {\n                dispatch(changeStatusCreator(false))\n                let newState = getState()\n                console.log(newState.profileData)\n                dispatch(getStatusThunk())\n            }\n        );\n    }\n}\n\nexport const getProfileInformationThunk = () => {\n    return async (dispatch, getState) => {\n        let state = getState()\n        let data = await profileService.getProfileInformation(state.auth.userInfo.userId)\n        dispatch(getProfileInformationCreator((data)))\n    }\n}\n\nexport const editProfileDataThunk = (newData) => {\n    return async (dispatch, getState) => {\n        let state = getState()\n        let result = await profileService.editNewProfileData(newData)\n        if (result.data.resultCode === 0) {\n            dispatch(editProfileDataCreator(newData))\n            dispatch(editDataStatusCreator(\"success\"))\n        } else {\n            let errors = result.data.messages;\n            dispatch(editDataStatusCreator(\"error\", errors))\n        }\n    }\n}\n\n//action creators\nexport const editDataStatusCreator = (editDataStatus, editDataErrorText) => {\n    return {\n        type: EDIT_DATA_STATUS,\n        editDataStatus,\n        editDataErrorText\n    }\n}\n\nconst editProfileDataCreator = (newData) => {\n    return {\n        type: EDIT_DATA,\n        newData\n    }\n}\n\nconst setStatus = (statusFromServer) => {\n    return {\n        type: SET_STATUS,\n        status: statusFromServer\n    }\n}\n\nexport const changeStatusCreator = (flag) => ({\n    type: CHANGE_STATUS,\n    flag: flag\n})\n\nexport const addCurrentStatusTextCreator = (e) => ({\n    type: ADD_CURRENT_STATUS_TEXT,\n    textareaObject: e\n})\n\nconst getProfileInformationCreator = (dataFromServer) => {\n    return {\n        type: GET_PROFILE_INFORMATION,\n        data: dataFromServer\n    }\n}\n\nexport const changeUpdatePhotoStatusCreator = (updatePhotoStatus, updatePhotoErrorText) => {\n    return {\n        type: CHANGE_UPDATE_PHOTO_STATUS,\n        updatePhotoStatus,\n        updatePhotoErrorText\n    }\n}\n\n\nexport default profilePageReducer;\n"]},"metadata":{},"sourceType":"module"}