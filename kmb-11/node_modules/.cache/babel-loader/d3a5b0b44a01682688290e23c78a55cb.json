{"ast":null,"code":"import _toConsumableArray from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\lessons\\\\React\\\\kmb-11\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport AppComponent from './Components/App/App';\nimport avatar from \"./Components/Profile/img/avatar.jpg\";\nimport PostsComponent from \"./Components/Profile/Posts\"; //state\n\nvar state = {\n  message: {\n    messageArray: ['Hello', 'World']\n  }\n};\nvar messagesMassiv = [{\n  avatar: avatar,\n  message: \"Эй, почему никто не лайкнул в прошлом посте?!\"\n}, {\n  avatar: avatar,\n  message: \"Ну что?! Давайте лайкать теперь этот пост.\"\n}];\nvar messages = messagesMassiv.map(function (el) {\n  return React.createElement(PostsComponent, {\n    avatar: el.avatar,\n    message: el.message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  });\n});\n\nvar addMessage = function addMessage(message) {\n  state.message.messageArray = _toConsumableArray(state.message.messageArray).concat([message]);\n  renderAllPage();\n};\n\nvar renderAllPage = function renderAllPage() {\n  ReactDOM.render(React.createElement(AppComponent, {\n    stateFromIndex: state.message,\n    functionAddMessage: addMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), document.getElementById('page'));\n};\n\nrenderAllPage();\nserviceWorker.unregister();","map":{"version":3,"sources":["C:\\lessons\\React\\kmb-11\\src\\index.js"],"names":["React","ReactDOM","serviceWorker","AppComponent","avatar","PostsComponent","state","message","messageArray","messagesMassiv","messages","map","el","addMessage","renderAllPage","render","document","getElementById","unregister"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,OAAOC,cAAP,MAA2B,4BAA3B,C,CAEA;;AACA,IAAIC,KAAK,GAAG;AACRC,EAAAA,OAAO,EAAE;AACLC,IAAAA,YAAY,EAAG,CAAC,OAAD,EAAU,OAAV;AADV;AADD,CAAZ;AAMA,IAAIC,cAAc,GAAG,CACjB;AAACL,EAAAA,MAAM,EAAEA,MAAT;AAAiBG,EAAAA,OAAO,EAAE;AAA1B,CADiB,EAEjB;AAACH,EAAAA,MAAM,EAAEA,MAAT;AAAiBG,EAAAA,OAAO,EAAE;AAA1B,CAFiB,CAArB;AAKA,IAAIG,QAAQ,GAAGD,cAAc,CAACE,GAAf,CAAmB,UAACC,EAAD,EAAO;AACrC,SAAO,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEA,EAAE,CAACR,MAA3B;AAAmC,IAAA,OAAO,EAAEQ,EAAE,CAACL,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAFc,CAAf;;AAKA,IAAMM,UAAU,GAAG,SAAbA,UAAa,CAACN,OAAD,EAAa;AAC5BD,EAAAA,KAAK,CAACC,OAAN,CAAcC,YAAd,sBAAiCF,KAAK,CAACC,OAAN,CAAcC,YAA/C,UAA6DD,OAA7D;AACAO,EAAAA,aAAa;AAChB,CAHD;;AAKA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxBb,EAAAA,QAAQ,CAACc,MAAT,CAAgB,oBAAC,YAAD;AAAc,IAAA,cAAc,EAAET,KAAK,CAACC,OAApC;AAA6C,IAAA,kBAAkB,EAAEM,UAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,EAAiGG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAjG;AACH,CAFD;;AAIAH,aAAa;AAEbZ,aAAa,CAACgB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport AppComponent from './Components/App/App';\nimport avatar from \"./Components/Profile/img/avatar.jpg\";\nimport PostsComponent from \"./Components/Profile/Posts\";\n\n//state\nlet state = {\n    message: {\n        messageArray : ['Hello', 'World'],\n        }\n};\n\nlet messagesMassiv = [\n    {avatar: avatar, message: \"Эй, почему никто не лайкнул в прошлом посте?!\"},\n    {avatar: avatar, message: \"Ну что?! Давайте лайкать теперь этот пост.\"}\n];\n\nlet messages = messagesMassiv.map((el)=> {\n    return <PostsComponent avatar={el.avatar} message={el.message}/>\n});\n\n\nconst addMessage = (message) => {\n    state.message.messageArray = [...state.message.messageArray, message];\n    renderAllPage();\n};\n\nconst renderAllPage = () => {\n    ReactDOM.render(<AppComponent stateFromIndex={state.message} functionAddMessage={addMessage} />, document.getElementById('page'));\n};\n\nrenderAllPage();\n\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}