{"ast":null,"code":"import _toConsumableArray from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport React from 'react';\nimport avatar from \"../Components/Profile/img/avatar.jpg\";\nimport axios from \"../Dall/axios-instance\";\nimport { setLogInState, setMeData } from \"./authReducer\";\nvar initialStateForProfile = {\n  users: [{\n    avatar: avatar,\n    firstName: 'Иван',\n    secondName: 'Стечкин',\n    birthday: '12 января 1990',\n    city: 'Минск',\n    education: 'ВКА им. Можайского',\n    site: 'it-kamasutra.com',\n    status: 'нет',\n    id: null\n  }],\n  statusChangeFlag: false\n};\nvar SET_STATUS = 'NETWORK/PROFILE/SET_STATUS';\nvar SET_ID = 'NETWORK/PROFILE/SET_ID';\n\nvar profilePageReducer = function profilePageReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateForProfile;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  var stateCopy = _objectSpread({}, state);\n\n  stateCopy.users = _toConsumableArray(state.users);\n\n  switch (action.type) {\n    case SET_ID:\n      stateCopy.users[0].id = action.id;\n      return stateCopy;\n\n    case SET_STATUS:\n      stateCopy.users[0].status = action.status;\n      return stateCopy;\n\n    default:\n      return state;\n  }\n};\n\nexport var getStatusThunk = function getStatusThunk() {\n  return function (dispatch, getState) {\n    var state = getState();\n    axios.get('auth/me').then(function (result) {\n      dispatch(setId(result.data.data.id));\n      var userId = state.profileData.users[0].id;\n      axios.get(\"profile/status/\".concat(userId)).then(function (result) {\n        dispatch(setStatus(result.statusText));\n      });\n    });\n  };\n};\n\nvar setId = function setId(idFromServer) {\n  return {\n    type: SET_ID,\n    id: idFromServer\n  };\n};\n\nvar setStatus = function setStatus(statusFromServer) {\n  return {\n    type: SET_STATUS,\n    status: statusFromServer\n  };\n};\n\nexport default profilePageReducer;","map":{"version":3,"sources":["C:\\lessons\\React\\kmb-11\\src\\Reducers\\profilePageReducer.js"],"names":["React","avatar","axios","setLogInState","setMeData","initialStateForProfile","users","firstName","secondName","birthday","city","education","site","status","id","statusChangeFlag","SET_STATUS","SET_ID","profilePageReducer","state","action","stateCopy","type","getStatusThunk","dispatch","getState","get","then","result","setId","data","userId","profileData","setStatus","statusText","idFromServer","statusFromServer"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAAQC,aAAR,EAAuBC,SAAvB,QAAuC,eAAvC;AAEA,IAAIC,sBAAsB,GAAG;AACzBC,EAAAA,KAAK,EAAE,CACH;AACIL,IAAAA,MAAM,EAAEA,MADZ;AAEIM,IAAAA,SAAS,EAAE,MAFf;AAGIC,IAAAA,UAAU,EAAE,SAHhB;AAIIC,IAAAA,QAAQ,EAAE,gBAJd;AAKIC,IAAAA,IAAI,EAAE,OALV;AAMIC,IAAAA,SAAS,EAAE,oBANf;AAOIC,IAAAA,IAAI,EAAE,kBAPV;AAQIC,IAAAA,MAAM,EAAE,KARZ;AASIC,IAAAA,EAAE,EAAE;AATR,GADG,CADkB;AAczBC,EAAAA,gBAAgB,EAAE;AAdO,CAA7B;AAiBA,IAAMC,UAAU,GAAG,4BAAnB;AACA,IAAMC,MAAM,GAAG,wBAAf;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAA4C;AAAA,MAA3CC,KAA2C,uEAAnCd,sBAAmC;AAAA,MAAXe,MAAW;;AACnE,MAAIC,SAAS,qBAAOF,KAAP,CAAb;;AACAE,EAAAA,SAAS,CAACf,KAAV,sBAAsBa,KAAK,CAACb,KAA5B;;AACA,UAAQc,MAAM,CAACE,IAAf;AACI,SAAKL,MAAL;AACII,MAAAA,SAAS,CAACf,KAAV,CAAgB,CAAhB,EAAmBQ,EAAnB,GAAwBM,MAAM,CAACN,EAA/B;AACA,aAAOO,SAAP;;AACJ,SAAKL,UAAL;AACIK,MAAAA,SAAS,CAACf,KAAV,CAAgB,CAAhB,EAAmBO,MAAnB,GAA4BO,MAAM,CAACP,MAAnC;AACA,aAAOQ,SAAP;;AACJ;AACI,aAAOF,KAAP;AARR;AAUH,CAbD;;AAeA,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAChC,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC3B,QAAIN,KAAK,GAAGM,QAAQ,EAApB;AACAvB,IAAAA,KAAK,CAACwB,GAAN,CAAU,SAAV,EACKC,IADL,CACU,UAAAC,MAAM,EAAI;AACZJ,MAAAA,QAAQ,CAACK,KAAK,CAACD,MAAM,CAACE,IAAP,CAAYA,IAAZ,CAAiBhB,EAAlB,CAAN,CAAR;AACA,UAAIiB,MAAM,GAAGZ,KAAK,CAACa,WAAN,CAAkB1B,KAAlB,CAAwB,CAAxB,EAA2BQ,EAAxC;AACAZ,MAAAA,KAAK,CAACwB,GAAN,0BAA4BK,MAA5B,GAAsCJ,IAAtC,CACI,UAAAC,MAAM,EAAI;AACNJ,QAAAA,QAAQ,CAACS,SAAS,CAACL,MAAM,CAACM,UAAR,CAAV,CAAR;AACH,OAHL;AAKH,KATL;AAUH,GAZD;AAaH,CAdM;;AAgBP,IAAML,KAAK,GAAG,SAARA,KAAQ,CAACM,YAAD,EAAkB;AAC5B,SAAO;AACHb,IAAAA,IAAI,EAAEL,MADH;AAEHH,IAAAA,EAAE,EAAEqB;AAFD,GAAP;AAIH,CALD;;AAOA,IAAMF,SAAS,GAAG,SAAZA,SAAY,CAACG,gBAAD,EAAsB;AACpC,SAAO;AACHd,IAAAA,IAAI,EAAEN,UADH;AAEHH,IAAAA,MAAM,EAAEuB;AAFL,GAAP;AAIH,CALD;;AAOA,eAAelB,kBAAf","sourcesContent":["import React from 'react';\nimport avatar from \"../Components/Profile/img/avatar.jpg\";\nimport axios from \"../Dall/axios-instance\";\nimport {setLogInState, setMeData} from \"./authReducer\";\n\nlet initialStateForProfile = {\n    users: [\n        {\n            avatar: avatar,\n            firstName: 'Иван',\n            secondName: 'Стечкин',\n            birthday: '12 января 1990',\n            city: 'Минск',\n            education: 'ВКА им. Можайского',\n            site: 'it-kamasutra.com',\n            status: 'нет',\n            id: null\n        }\n    ],\n    statusChangeFlag: false\n};\n\nconst SET_STATUS = 'NETWORK/PROFILE/SET_STATUS';\nconst SET_ID = 'NETWORK/PROFILE/SET_ID';\n\nconst profilePageReducer = (state = initialStateForProfile, action) => {\n    let stateCopy = {...state};\n    stateCopy.users = [...state.users];\n    switch (action.type) {\n        case SET_ID:\n            stateCopy.users[0].id = action.id\n            return stateCopy\n        case SET_STATUS:\n            stateCopy.users[0].status = action.status\n            return stateCopy\n        default:\n            return state;\n    }\n};\n\nexport const getStatusThunk = () => {\n    return (dispatch, getState) => {\n        let state = getState();\n        axios.get('auth/me')\n            .then(result => {\n                dispatch(setId(result.data.data.id));\n                let userId = state.profileData.users[0].id;\n                axios.get(`profile/status/${userId}`).then(\n                    result => {\n                        dispatch(setStatus(result.statusText));\n                    }\n                )\n            })\n    }\n}\n\nconst setId = (idFromServer) => {\n    return {\n        type: SET_ID,\n        id: idFromServer\n    }\n}\n\nconst setStatus = (statusFromServer) => {\n    return {\n        type: SET_STATUS,\n        status: statusFromServer\n    }\n}\n\nexport default profilePageReducer;\n"]},"metadata":{},"sourceType":"module"}