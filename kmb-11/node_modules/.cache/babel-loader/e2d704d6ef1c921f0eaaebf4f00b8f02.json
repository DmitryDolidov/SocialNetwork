{"ast":null,"code":"import _classCallCheck from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _inherits from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\lessons\\\\React\\\\kmb-11\\\\src\\\\Components\\\\EditProfilePage\\\\EditFormContainer.js\";\nimport React from 'react';\nimport { reduxForm } from \"redux-form\";\nimport EditProfileForm from \"./EditProfileForm\";\nimport { connect } from \"react-redux\";\nimport { editProfileDataThunk, getProfileInformationThunk, updatePhotoSaga } from \"../../Reducers/profilePageReducer\";\nimport avatar from \"../Profile/img/avatar.jpg\";\nvar FormUnderRedux = reduxForm({\n  // a unique name for the form\n  form: 'editProfile'\n})(EditProfileForm);\n\nvar EditFormContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditFormContainer, _React$Component);\n\n  function EditFormContainer(props) {\n    var _this;\n\n    _classCallCheck(this, EditFormContainer);\n\n    su;\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(EditFormContainer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getProfileInformation();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(FormUnderRedux, Object.assign({\n        onSubmit: this.submit\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EditFormContainer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    initialValues: {\n      redFullName: state.profileData.fullName,\n      redLookingForAJobDescription: state.profileData.lookingForAJobDescription,\n      redLookingForAJob: state.profileData.lookingForAJob,\n      redAboutMe: state.profileData.aboutMe,\n      redFacebook: state.profileData.contacts.facebook,\n      redGitHub: state.profileData.contacts.github,\n      redInstagram: state.profileData.contacts.instagram,\n      redMainLink: state.profileData.contacts.mainLink,\n      redTwitter: state.profileData.contacts.twitter,\n      redVk: state.profileData.contacts.vk,\n      redWebSite: state.profileData.contacts.website,\n      redYoutube: state.profileData.contacts.youtube\n    },\n    enableReinitialize: true,\n    updatePhotoStatus: state.profileData.updatePhotoStatus\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    editProfileData: function editProfileData(newData) {\n      dispatch(editProfileDataThunk(newData));\n    },\n    getProfileInformation: function getProfileInformation() {\n      dispatch(getProfileInformationThunk());\n    },\n    update: function update(e) {\n      var file = e.target.files[0];\n      console.log(file);\n\n      if (file) {\n        var data = new FormData();\n        data.append('file', file);\n        dispatch(updatePhotoSaga(data));\n      }\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditFormContainer);","map":{"version":3,"sources":["C:\\lessons\\React\\kmb-11\\src\\Components\\EditProfilePage\\EditFormContainer.js"],"names":["React","reduxForm","EditProfileForm","connect","editProfileDataThunk","getProfileInformationThunk","updatePhotoSaga","avatar","FormUnderRedux","form","EditFormContainer","props","su","getProfileInformation","submit","Component","mapStateToProps","state","initialValues","redFullName","profileData","fullName","redLookingForAJobDescription","lookingForAJobDescription","redLookingForAJob","lookingForAJob","redAboutMe","aboutMe","redFacebook","contacts","facebook","redGitHub","github","redInstagram","instagram","redMainLink","mainLink","redTwitter","twitter","redVk","vk","redWebSite","website","redYoutube","youtube","enableReinitialize","updatePhotoStatus","mapDispatchToProps","dispatch","editProfileData","newData","update","e","file","target","files","console","log","data","FormData","append"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,YAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,oBAAR,EAA8BC,0BAA9B,EAA0DC,eAA1D,QAAgF,mCAAhF;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAGA,IAAIC,cAAc,GAAGP,SAAS,CAAC;AAC3B;AACAQ,EAAAA,IAAI,EAAE;AAFqB,CAAD,CAAT,CAGlBP,eAHkB,CAArB;;IAKMQ,iB;;;;;AAEF,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACfC,IAAAA,EAAE;AADa;AAElB;;;;yCAsBoB;AACjB,WAAKD,KAAL,CAAWE,qBAAX;AACH;;;6BAEQ;AACL,aAAO,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAE,KAAKC;AAA/B,SAA2C,KAAKH,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH;;;;EAhC2BX,KAAK,CAACe,S;;AAmCtC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAE/B,SAAO;AACHC,IAAAA,aAAa,EAAE;AACXC,MAAAA,WAAW,EAAEF,KAAK,CAACG,WAAN,CAAkBC,QADpB;AAEXC,MAAAA,4BAA4B,EAAEL,KAAK,CAACG,WAAN,CAAkBG,yBAFrC;AAGXC,MAAAA,iBAAiB,EAAEP,KAAK,CAACG,WAAN,CAAkBK,cAH1B;AAIXC,MAAAA,UAAU,EAAET,KAAK,CAACG,WAAN,CAAkBO,OAJnB;AAKXC,MAAAA,WAAW,EAAEX,KAAK,CAACG,WAAN,CAAkBS,QAAlB,CAA2BC,QAL7B;AAMXC,MAAAA,SAAS,EAAEd,KAAK,CAACG,WAAN,CAAkBS,QAAlB,CAA2BG,MAN3B;AAOXC,MAAAA,YAAY,EAAEhB,KAAK,CAACG,WAAN,CAAkBS,QAAlB,CAA2BK,SAP9B;AAQXC,MAAAA,WAAW,EAAElB,KAAK,CAACG,WAAN,CAAkBS,QAAlB,CAA2BO,QAR7B;AASXC,MAAAA,UAAU,EAAEpB,KAAK,CAACG,WAAN,CAAkBS,QAAlB,CAA2BS,OAT5B;AAUXC,MAAAA,KAAK,EAAEtB,KAAK,CAACG,WAAN,CAAkBS,QAAlB,CAA2BW,EAVvB;AAWXC,MAAAA,UAAU,EAAExB,KAAK,CAACG,WAAN,CAAkBS,QAAlB,CAA2Ba,OAX5B;AAYXC,MAAAA,UAAU,EAAE1B,KAAK,CAACG,WAAN,CAAkBS,QAAlB,CAA2Be;AAZ5B,KADZ;AAeHC,IAAAA,kBAAkB,EAAE,IAfjB;AAgBHC,IAAAA,iBAAiB,EAAE7B,KAAK,CAACG,WAAN,CAAkB0B;AAhBlC,GAAP;AAkBH,CApBD;;AAsBA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACrC,SAAO;AACHC,IAAAA,eAAe,EAAE,yBAACC,OAAD,EAAa;AAC1BF,MAAAA,QAAQ,CAAC5C,oBAAoB,CAAC8C,OAAD,CAArB,CAAR;AACH,KAHE;AAIHrC,IAAAA,qBAAqB,EAAE,iCAAM;AACzBmC,MAAAA,QAAQ,CAAC3C,0BAA0B,EAA3B,CAAR;AACH,KANE;AAOH8C,IAAAA,MAAM,EAAE,gBAACC,CAAD,EAAO;AACX,UAAIC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;;AAEA,UAAIA,IAAJ,EAAU;AACN,YAAIK,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,QAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBP,IAApB;AACAL,QAAAA,QAAQ,CAAC1C,eAAe,CAACoD,IAAD,CAAhB,CAAR;AACH;AACJ;AAhBE,GAAP;AAkBH,CAnBD;;AAqBA,eAAevD,OAAO,CAACa,eAAD,EAAkB+B,kBAAlB,CAAP,CAA6CrC,iBAA7C,CAAf","sourcesContent":["import React from 'react'\r\nimport {reduxForm} from \"redux-form\";\r\nimport EditProfileForm from \"./EditProfileForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {editProfileDataThunk, getProfileInformationThunk, updatePhotoSaga} from \"../../Reducers/profilePageReducer\";\r\nimport avatar from \"../Profile/img/avatar.jpg\";\r\n\r\n\r\nlet FormUnderRedux = reduxForm({\r\n    // a unique name for the form\r\n    form: 'editProfile'\r\n})(EditProfileForm)\r\n\r\nclass EditFormContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        su\r\n    }\r\n\r\n    submit = (values) => {\r\n        let newData = {\r\n            aboutMe: values.redAboutMe,\r\n            contacts: {\r\n                facebook: values.redFacebook,\r\n                github: values.redGitHub,\r\n                instagram: values.redInstagram,\r\n                mainlink: values.redMainLink,\r\n                twitter: values.redTwitter,\r\n                vk: values.redVk,\r\n                website: values.redWebSite,\r\n                youtube: values.redYoutube\r\n            },\r\n            lookingForAJob: true,\r\n            lookingForAJobDescription: values.redLookingForAJobDescription,\r\n            fullName: values.redFullName\r\n        }\r\n        this.props.editProfileData(newData)\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.getProfileInformation()\r\n    }\r\n\r\n    render() {\r\n        return <FormUnderRedux onSubmit={this.submit} {...this.props} />\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        initialValues: {\r\n            redFullName: state.profileData.fullName,\r\n            redLookingForAJobDescription: state.profileData.lookingForAJobDescription,\r\n            redLookingForAJob: state.profileData.lookingForAJob,\r\n            redAboutMe: state.profileData.aboutMe,\r\n            redFacebook: state.profileData.contacts.facebook,\r\n            redGitHub: state.profileData.contacts.github,\r\n            redInstagram: state.profileData.contacts.instagram,\r\n            redMainLink: state.profileData.contacts.mainLink,\r\n            redTwitter: state.profileData.contacts.twitter,\r\n            redVk: state.profileData.contacts.vk,\r\n            redWebSite: state.profileData.contacts.website,\r\n            redYoutube: state.profileData.contacts.youtube\r\n        },\r\n        enableReinitialize: true,\r\n        updatePhotoStatus: state.profileData.updatePhotoStatus\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        editProfileData: (newData) => {\r\n            dispatch(editProfileDataThunk(newData))\r\n        },\r\n        getProfileInformation: () => {\r\n            dispatch(getProfileInformationThunk())\r\n        },\r\n        update: (e) => {\r\n            let file = e.target.files[0];\r\n            console.log(file);\r\n\r\n            if (file) {\r\n                let data = new FormData();\r\n                data.append('file', file);\r\n                dispatch(updatePhotoSaga(data))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditFormContainer);\r\n"]},"metadata":{},"sourceType":"module"}