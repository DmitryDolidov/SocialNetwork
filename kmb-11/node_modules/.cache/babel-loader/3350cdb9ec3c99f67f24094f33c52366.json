{"ast":null,"code":"import _toConsumableArray from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { combineReducers, createStore } from \"redux\";\nimport avatar from \"./Components/Profile/img/avatar.jpg\";\nvar initialStateForPost = {\n  messageArray: [{\n    avatar: avatar,\n    post: \"Эй, почему никто не лайкнул в прошлом посте?!\"\n  }, {\n    avatar: avatar,\n    post: \"Ну что?! Давайте лайкать теперь этот пост.\"\n  }],\n  currentPost: ''\n};\n\nvar addPostReducer = function addPostReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateForPost;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_POST':\n      var stateCopy = {\n        messageArray: _toConsumableArray(state.messageArray)\n      };\n      stateCopy.messageArray.push({\n        avatar: avatar,\n        post: state.currentPost\n      });\n      stateCopy.currentPost = \"\";\n      return stateCopy;\n\n    case 'CHANGE_NEW_POST':\n      state.currentPost = action.newPost;\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nvar superReducer = combineReducers({\n  message: addPostReducer\n});\nvar store = createStore(superReducer);\nexport default store;","map":{"version":3,"sources":["C:\\lessons\\React\\kmb-11\\src\\store.js"],"names":["combineReducers","createStore","avatar","initialStateForPost","messageArray","post","currentPost","addPostReducer","state","action","type","stateCopy","push","newPost","superReducer","message","store"],"mappings":";AAAA,SAAQA,eAAR,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AAEA,IAAIC,mBAAmB,GAAG;AACtBC,EAAAA,YAAY,EAAE,CACV;AAACF,IAAAA,MAAM,EAAEA,MAAT;AAAiBG,IAAAA,IAAI,EAAE;AAAvB,GADU,EAEV;AAACH,IAAAA,MAAM,EAAEA,MAAT;AAAiBG,IAAAA,IAAI,EAAE;AAAvB,GAFU,CADQ;AAKtBC,EAAAA,WAAW,EAAE;AALS,CAA1B;;AAOA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAyC;AAAA,MAAxCC,KAAwC,uEAAhCL,mBAAgC;AAAA,MAAXM,MAAW;;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,UAAIC,SAAS,GAAG;AAACP,QAAAA,YAAY,qBAAMI,KAAK,CAACJ,YAAZ;AAAb,OAAhB;AACAO,MAAAA,SAAS,CAACP,YAAV,CAAuBQ,IAAvB,CAA4B;AAACV,QAAAA,MAAM,EAAEA,MAAT;AAAiBG,QAAAA,IAAI,EAAEG,KAAK,CAACF;AAA7B,OAA5B;AACAK,MAAAA,SAAS,CAACL,WAAV,GAAwB,EAAxB;AACA,aAAOK,SAAP;;AACJ,SAAK,iBAAL;AACIH,MAAAA,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,OAA3B;AACA,aAAOL,KAAP;;AACJ;AACI,aAAOA,KAAP;AAVR;AAYH,CAbD;;AAcA,IAAMM,YAAY,GAAGd,eAAe,CAAC;AACjCe,EAAAA,OAAO,EAAER;AADwB,CAAD,CAApC;AAKA,IAAMS,KAAK,GAAGf,WAAW,CAACa,YAAD,CAAzB;AAEA,eAAeE,KAAf","sourcesContent":["import {combineReducers, createStore} from \"redux\";\nimport avatar from \"./Components/Profile/img/avatar.jpg\";\n\nlet initialStateForPost = {\n    messageArray: [\n        {avatar: avatar, post: \"Эй, почему никто не лайкнул в прошлом посте?!\"},\n        {avatar: avatar, post: \"Ну что?! Давайте лайкать теперь этот пост.\"}\n    ],\n    currentPost: ''\n};\nconst addPostReducer = (state = initialStateForPost, action) => {\n    switch (action.type) {\n        case 'ADD_POST':\n            let stateCopy = {messageArray: [...state.messageArray]};\n            stateCopy.messageArray.push({avatar: avatar, post: state.currentPost});\n            stateCopy.currentPost = \"\";\n            return stateCopy;\n        case 'CHANGE_NEW_POST':\n            state.currentPost = action.newPost;\n            return state;\n        default:\n            return state;\n    }\n};\nconst superReducer = combineReducers({\n    message: addPostReducer\n});\n\n\nconst store = createStore(superReducer);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}