{"ast":null,"code":"import _classCallCheck from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\lessons\\\\React\\\\kmb-11\\\\src\\\\Components\\\\EditProfilePage\\\\EditFormContainer.js\";\nimport React from 'react';\nimport { reduxForm } from \"redux-form\";\nimport EditProfileForm from \"./EditProfileForm\";\nimport { connect } from \"react-redux\";\nimport { editProfileDataThunk, getProfileInformationThunk, updatePhotoSaga } from \"../../Reducers/profilePageReducer\";\nvar FormUnderRedux = reduxForm({\n  // a unique name for the form\n  form: 'editProfile'\n})(EditProfileForm);\n\nvar EditFormContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditFormContainer, _React$Component);\n\n  function EditFormContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditFormContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditFormContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.submit = function (values) {\n      var newData = {\n        aboutMe: values.redAboutMe,\n        contacts: {\n          facebook: values.redFacebook,\n          github: values.redGitHub,\n          instagram: values.redInstagram,\n          mainlink: values.redMainLink,\n          twitter: values.redTwitter,\n          vk: values.redVk,\n          website: values.redWebSite,\n          youtube: values.redYoutube\n        },\n        lookingForAJob: true,\n        lookingForAJobDescription: values.redLookingForAJobDescription,\n        fullName: values.redFullName\n      };\n\n      _this.props.editProfileData(newData);\n    };\n\n    return _this;\n  }\n\n  _createClass(EditFormContainer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getProfileInformation();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.props.updatePhotoStatus === \"success\") {\n        this.props.clearUpdatePhotoStatus();\n      } else if (this.props.updatePhotoStatus === \"error\") {\n        this.props.clearUpdatePhotoErrorText();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(FormUnderRedux, Object.assign({\n        onSubmit: this.submit\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EditFormContainer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    initialValues: {\n      redFullName: state.profileData.fullName,\n      redLookingForAJobDescription: state.profileData.lookingForAJobDescription,\n      redLookingForAJob: state.profileData.lookingForAJob,\n      redAboutMe: state.profileData.aboutMe,\n      redFacebook: state.profileData.contacts.facebook,\n      redGitHub: state.profileData.contacts.github,\n      redInstagram: state.profileData.contacts.instagram,\n      redMainLink: state.profileData.contacts.mainLink,\n      redTwitter: state.profileData.contacts.twitter,\n      redVk: state.profileData.contacts.vk,\n      redWebSite: state.profileData.contacts.website,\n      redYoutube: state.profileData.contacts.youtube\n    },\n    enableReinitialize: true,\n    updatePhotoStatus: state.profileData.updatePhotoStatus,\n    updatePhotoErrorText: state.profileData.updatePhotoErrorText\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    editProfileData: function editProfileData(newData) {\n      dispatch(editProfileDataThunk(newData));\n    },\n    getProfileInformation: function getProfileInformation() {\n      dispatch(getProfileInformationThunk());\n    },\n    update: function update(e) {\n      var file = e.target.files[0];\n\n      if (file) {\n        var data = new FormData();\n        data.append('file', file);\n        dispatch(updatePhotoSaga(data));\n      }\n    },\n    clearUpdatePhotoStatus: function clearUpdatePhotoStatus(status, errorText) {\n      dispatch(changeUpdatePhotoStatus(status, errorText));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditFormContainer);","map":{"version":3,"sources":["C:\\lessons\\React\\kmb-11\\src\\Components\\EditProfilePage\\EditFormContainer.js"],"names":["React","reduxForm","EditProfileForm","connect","editProfileDataThunk","getProfileInformationThunk","updatePhotoSaga","FormUnderRedux","form","EditFormContainer","submit","values","newData","aboutMe","redAboutMe","contacts","facebook","redFacebook","github","redGitHub","instagram","redInstagram","mainlink","redMainLink","twitter","redTwitter","vk","redVk","website","redWebSite","youtube","redYoutube","lookingForAJob","lookingForAJobDescription","redLookingForAJobDescription","fullName","redFullName","props","editProfileData","getProfileInformation","updatePhotoStatus","clearUpdatePhotoStatus","clearUpdatePhotoErrorText","Component","mapStateToProps","state","initialValues","profileData","redLookingForAJob","mainLink","enableReinitialize","updatePhotoErrorText","mapDispatchToProps","dispatch","update","e","file","target","files","data","FormData","append","status","errorText","changeUpdatePhotoStatus"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {reduxForm} from \"redux-form\";\r\nimport EditProfileForm from \"./EditProfileForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    editProfileDataThunk,\r\n    getProfileInformationThunk,\r\n    updatePhotoSaga\r\n} from \"../../Reducers/profilePageReducer\";\r\n\r\n\r\nlet FormUnderRedux = reduxForm({\r\n    // a unique name for the form\r\n    form: 'editProfile'\r\n})(EditProfileForm)\r\n\r\nclass EditFormContainer extends React.Component {\r\n\r\n    submit = (values) => {\r\n        let newData = {\r\n            aboutMe: values.redAboutMe,\r\n            contacts: {\r\n                facebook: values.redFacebook,\r\n                github: values.redGitHub,\r\n                instagram: values.redInstagram,\r\n                mainlink: values.redMainLink,\r\n                twitter: values.redTwitter,\r\n                vk: values.redVk,\r\n                website: values.redWebSite,\r\n                youtube: values.redYoutube\r\n            },\r\n            lookingForAJob: true,\r\n            lookingForAJobDescription: values.redLookingForAJobDescription,\r\n            fullName: values.redFullName\r\n        }\r\n        this.props.editProfileData(newData)\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.getProfileInformation()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.props.updatePhotoStatus === \"success\") {\r\n            this.props.clearUpdatePhotoStatus()\r\n        } else if (this.props.updatePhotoStatus === \"error\") {\r\n            this.props.clearUpdatePhotoErrorText()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <FormUnderRedux onSubmit={this.submit} {...this.props} />\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        initialValues: {\r\n            redFullName: state.profileData.fullName,\r\n            redLookingForAJobDescription: state.profileData.lookingForAJobDescription,\r\n            redLookingForAJob: state.profileData.lookingForAJob,\r\n            redAboutMe: state.profileData.aboutMe,\r\n            redFacebook: state.profileData.contacts.facebook,\r\n            redGitHub: state.profileData.contacts.github,\r\n            redInstagram: state.profileData.contacts.instagram,\r\n            redMainLink: state.profileData.contacts.mainLink,\r\n            redTwitter: state.profileData.contacts.twitter,\r\n            redVk: state.profileData.contacts.vk,\r\n            redWebSite: state.profileData.contacts.website,\r\n            redYoutube: state.profileData.contacts.youtube\r\n        },\r\n        enableReinitialize: true,\r\n        updatePhotoStatus: state.profileData.updatePhotoStatus,\r\n        updatePhotoErrorText: state.profileData.updatePhotoErrorText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        editProfileData: (newData) => {\r\n            dispatch(editProfileDataThunk(newData))\r\n        },\r\n        getProfileInformation: () => {\r\n            dispatch(getProfileInformationThunk())\r\n        },\r\n        update: (e) => {\r\n            let file = e.target.files[0];\r\n            if (file) {\r\n                let data = new FormData();\r\n                data.append('file', file);\r\n                dispatch(updatePhotoSaga(data))\r\n            }\r\n        },\r\n        clearUpdatePhotoStatus: (status, errorText) => {\r\n            dispatch(changeUpdatePhotoStatus(status, errorText))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditFormContainer);\r\n"]},"metadata":{},"sourceType":"module"}