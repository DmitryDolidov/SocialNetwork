{"ast":null,"code":"import _objectSpread from \"C:\\\\lessons\\\\React\\\\kmb-11\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport React from 'react';\nimport axios from \"../Dall/axios-instance\";\nvar initialStateForAuth = {\n  logInState: false,\n  userInfo: {\n    userId: null,\n    userName: null,\n    avatarUrl: ''\n  }\n};\nvar SET_LOGIN_STATE = 'NETWORK/AUTH/SET_LOGIN_STATE';\nvar SET_ME_DATA = 'NETWORK/AUTH/SET_ME_DATA';\nvar LOG_OUT_LOGIN_STATE = 'NETWORK/AUTH/LOG_OUT_LOGIN_STATE';\n\nvar authReducer = function authReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateForAuth;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  var stateCopy = _objectSpread({}, state);\n\n  stateCopy.userInfo = _objectSpread({}, state.userInfo);\n\n  switch (action.type) {\n    case SET_LOGIN_STATE:\n      stateCopy.logInState = action.serverLogInState;\n      return stateCopy;\n\n    case SET_ME_DATA:\n      stateCopy.userInfo.userId = action.userId;\n      stateCopy.userInfo.userName = action.userName;\n      return stateCopy;\n\n    case LOG_OUT_LOGIN_STATE:\n      stateCopy.logInState = false;\n      return stateCopy;\n\n    default:\n      return state;\n  }\n};\n\nexport var meThunk = function meThunk() {\n  return function (dispatch) {\n    axios.get('auth/me').then(function (result) {\n      if (result.data.resultCode === 0) {\n        dispatch(setLogInState(true));\n        dispatch(setMeData(result.data.data.id, result.data.data.login));\n      }\n    });\n  };\n};\nexport var logOutThunk = function logOutThunk() {\n  return function (dispatch) {\n    axios.post('auth/logout').then(function (result) {\n      if (result.data.resultCode === 0) {\n        dispatch(logOut());\n      } else {\n        alert(\"Извините, произошла ошибка. Попробуйте повторить позже.\");\n      }\n    });\n  };\n}; //action creaters\n\nexport var setLogInState = function setLogInState(serverLogInState) {\n  return {\n    type: SET_LOGIN_STATE,\n    serverLogInState: serverLogInState\n  };\n};\nexport var setMeData = function setMeData(userId, userName) {\n  return {\n    type: SET_ME_DATA,\n    userId: userId,\n    userName: userName\n  };\n};\nexport var logOut = function logOut() {\n  return {\n    type: LOG_OUT_LOGIN_STATE\n  };\n};\nexport default authReducer;","map":{"version":3,"sources":["C:\\lessons\\React\\kmb-11\\src\\Reducers\\authReducer.js"],"names":["React","axios","initialStateForAuth","logInState","userInfo","userId","userName","avatarUrl","SET_LOGIN_STATE","SET_ME_DATA","LOG_OUT_LOGIN_STATE","authReducer","state","action","stateCopy","type","serverLogInState","meThunk","dispatch","get","then","result","data","resultCode","setLogInState","setMeData","id","login","logOutThunk","post","logOut","alert"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from \"../Dall/axios-instance\";\n\nlet initialStateForAuth = {\n    logInState: false,\n    userInfo: {\n        userId: null,\n        userName: null,\n        avatarUrl: ''\n    }\n};\n\nconst SET_LOGIN_STATE = 'NETWORK/AUTH/SET_LOGIN_STATE';\nconst SET_ME_DATA = 'NETWORK/AUTH/SET_ME_DATA';\nconst LOG_OUT_LOGIN_STATE = 'NETWORK/AUTH/LOG_OUT_LOGIN_STATE';\n\nconst authReducer = (state = initialStateForAuth, action) => {\n    let stateCopy = {...state}\n    stateCopy.userInfo = {...state.userInfo}\n    switch (action.type) {\n        case SET_LOGIN_STATE:\n            stateCopy.logInState = action.serverLogInState;\n            return stateCopy;\n        case SET_ME_DATA:\n            stateCopy.userInfo.userId = action.userId;\n            stateCopy.userInfo.userName = action.userName;\n            return stateCopy;\n        case LOG_OUT_LOGIN_STATE:\n            stateCopy.logInState = false\n            return stateCopy;\n        default:\n            return state;\n    }\n};\n\nexport const meThunk = () => {\n    return (dispatch) => {\n        axios.get('auth/me')\n            .then(result => {\n                if(result.data.resultCode === 0) {\n                    dispatch(setLogInState(true))\n                    dispatch(setMeData(result.data.data.id, result.data.data.login))\n            }\n        });\n    };\n};\n\nexport const logOutThunk = () => {\n    return (dispatch) => {\n        axios.post('auth/logout').then(\n            result => {\n                if(result.data.resultCode === 0) {\n                    dispatch(logOut())\n                } else {\n                    alert(\"Извините, произошла ошибка. Попробуйте повторить позже.\")\n                }\n            }\n        )\n\n    }\n}\n\n//action creaters\n\nexport const setLogInState = (serverLogInState) => ({\n    type: SET_LOGIN_STATE,\n    serverLogInState: serverLogInState\n})\n\nexport const setMeData = (userId, userName) => ({\n    type: SET_ME_DATA,\n    userId: userId,\n    userName: userName\n})\n\nexport const logOut = () => (\n    {\n        type: LOG_OUT_LOGIN_STATE\n    }\n)\n\nexport default authReducer;\n"]},"metadata":{},"sourceType":"module"}