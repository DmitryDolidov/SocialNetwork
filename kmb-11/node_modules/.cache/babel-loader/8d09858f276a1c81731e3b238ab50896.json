{"ast":null,"code":"var _jsxFileName = \"C:\\\\lessons\\\\React\\\\kmb-11\\\\src\\\\Components\\\\Dialogs\\\\Dialogs.js\";\nimport React from 'react';\nimport './Dialogs.css';\nimport CorrespondentComponent from \"./CorrespondentComponent\";\nimport { connect } from 'react-redux';\nimport { Route } from \"react-router\";\nimport DialogsMessageComponent from \"./DialogsMessage\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport DefaultDialogsMessageComponent from \"./DefaultDialogsMessage\";\nimport { chooseDialogOnClickDispatch, chooseDialogOnUrlDispatch } from \"../../store\";\n\nvar DialogsComponent = function DialogsComponent(props) {\n  var idFromUrl = props.match.params.userId;\n  console.log(idFromUrl);\n  var returnMessages = '';\n\n  if (idFromUrl !== props.currentCorresspondentId) {\n    //props.chooseDialogOnUrl(idFromUrl);\n    returnMessages = React.createElement(DefaultDialogsMessageComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n  } else {\n    returnMessages = props.dialogMessages[props.currentCorresspondentId].map(function (el) {\n      return React.createElement(DialogsMessageComponent, {\n        avatar: props.dialogCorrespondents[el.id].avatar,\n        name: props.dialogCorrespondents[el.id].firstName,\n        message: el.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      });\n    });\n  }\n\n  var returnDialogCorrespondents = props.dialogCorrespondents.map(function (el) {\n    if (el.id !== 0) {\n      return React.createElement(NavLink, {\n        to: \"/dialogs/:\".concat(el.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(CorrespondentComponent, {\n        avatar: el.avatar,\n        name: el.firstName,\n        chooseDialog: props.chooseDialogOnClick,\n        currentCorresspondentId: props.currentCorresspondentId,\n        correspondentId: el.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    }\n  });\n  return React.createElement(\"div\", {\n    className: 'dialogs-box',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: 'dialogs-titul',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"\\u0414\\u0438\\u0430\\u043B\\u043E\\u0433\\u0438\"), React.createElement(\"div\", {\n    className: \"dialogs-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dialogs-users\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, returnDialogCorrespondents), React.createElement(\"div\", {\n    className: \"dialogs-messages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/dialogs/:userId\",\n    render: function render() {\n      return returnMessages;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    dialogCorrespondents: state.dialogData.dialogCorrespondents,\n    currentCorresspondentId: state.dialogData.currentCorresspondentId,\n    dialogMessages: state.dialogData.dialogMessages\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    chooseDialogOnClick: function chooseDialogOnClick(corresspondentId) {\n      dispatch(chooseDialogOnClickDispatch(corresspondentId));\n    },\n    chooseDialogOnUrl: function chooseDialogOnUrl(corresspondentId) {\n      dispatch(chooseDialogOnUrlDispatch(corresspondentId));\n    }\n  };\n};\n\nvar ConnectedDialogComponent = withRouter(connect(mapStateToProps, mapDispatchToProps)(DialogsComponent));\nexport default ConnectedDialogComponent;","map":{"version":3,"sources":["C:\\lessons\\React\\kmb-11\\src\\Components\\Dialogs\\Dialogs.js"],"names":["React","CorrespondentComponent","connect","Route","DialogsMessageComponent","NavLink","withRouter","DefaultDialogsMessageComponent","chooseDialogOnClickDispatch","chooseDialogOnUrlDispatch","DialogsComponent","props","idFromUrl","match","params","userId","console","log","returnMessages","currentCorresspondentId","dialogMessages","map","el","dialogCorrespondents","id","avatar","firstName","message","returnDialogCorrespondents","chooseDialogOnClick","mapStateToProps","state","dialogData","mapDispatchToProps","dispatch","corresspondentId","chooseDialogOnUrl","ConnectedDialogComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Dialogs.css';\nimport CorrespondentComponent from \"./CorrespondentComponent\";\nimport {connect} from 'react-redux';\nimport {Route} from \"react-router\";\nimport DialogsMessageComponent from \"./DialogsMessage\";\nimport {NavLink, withRouter} from \"react-router-dom\";\nimport DefaultDialogsMessageComponent from \"./DefaultDialogsMessage\";\nimport {chooseDialogOnClickDispatch, chooseDialogOnUrlDispatch} from \"../../store\";\n\nconst DialogsComponent = (props) => {\n\n    let idFromUrl = props.match.params.userId;\n    console.log(idFromUrl);\n    let returnMessages = '';\n    if (idFromUrl !== props.currentCorresspondentId) {\n        //props.chooseDialogOnUrl(idFromUrl);\n        returnMessages = <DefaultDialogsMessageComponent/>;\n    } else {\n        returnMessages = props.dialogMessages[props.currentCorresspondentId].map((el) => {\n            return (<DialogsMessageComponent avatar={props.dialogCorrespondents[el.id].avatar}\n                                             name={props.dialogCorrespondents[el.id].firstName} message={el.message}/>);\n        });\n    }\n\n    let returnDialogCorrespondents = props.dialogCorrespondents.map((el) => {\n        if(el.id !== 0) {\n            return (<NavLink to={`/dialogs/:${el.id }`} ><CorrespondentComponent\n                        avatar={el.avatar} name={el.firstName} chooseDialog={props.chooseDialogOnClick} currentCorresspondentId={props.currentCorresspondentId}\n                        correspondentId={el.id} />\n                    </NavLink>)\n        }\n    });\n\n    return (\n        <div className={'dialogs-box'}>\n            <div className={'dialogs-titul'}>\n                Диалоги\n            </div>\n            <div className={\"dialogs-content\"}>\n                <div className={\"dialogs-users\"}>\n                    {returnDialogCorrespondents}\n                </div>\n                <div className={\"dialogs-messages\"}>\n                    <Route path={`/dialogs/:userId`} render={() => returnMessages }/>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogCorrespondents: state.dialogData.dialogCorrespondents,\n        currentCorresspondentId: state.dialogData.currentCorresspondentId,\n        dialogMessages: state.dialogData.dialogMessages\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        chooseDialogOnClick: (corresspondentId) => {\n            dispatch(\n                chooseDialogOnClickDispatch(corresspondentId)\n            );\n        },\n        chooseDialogOnUrl: (corresspondentId) => {\n            dispatch(\n                chooseDialogOnUrlDispatch(corresspondentId)\n            );\n        }\n    }\n};\n\nconst ConnectedDialogComponent = withRouter(connect(mapStateToProps, mapDispatchToProps)(DialogsComponent));\n\nexport default ConnectedDialogComponent;"]},"metadata":{},"sourceType":"module"}