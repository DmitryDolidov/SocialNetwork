{"ast":null,"code":"var _jsxFileName = \"C:\\\\lessons\\\\React\\\\kmb-11\\\\src\\\\Components\\\\Dialogs\\\\Dialogs.js\";\nimport React from 'react';\nimport './Dialogs.css';\nimport DialogsListComponent from \"./DialogsList\";\nimport { connect } from 'react-redux';\nimport { Route } from \"react-router\";\nimport DialogsMessageComponent from \"./DialogsMessage\";\nimport { NavLink } from \"react-router-dom\";\nimport DefaultDialogsMessageComponent from \"./DefaultDialogsMessage\";\n\nvar DialogsComponent = function DialogsComponent(props) {\n  var returnDialogCorrespondents = props.dialogCorrespondents.map(function (el) {\n    if (el.id !== 0) {\n      return React.createElement(NavLink, {\n        to: \"/dialogs/\".concat(el.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(DialogsListComponent, {\n        avatar: el.avatar,\n        name: el.firstName,\n        currentCorresspondentId: props.currentCorresspondentId,\n        correspondentId: el.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }));\n    }\n  });\n  var returnMessages = '';\n  var returnDefaultMessages = React.createElement(DefaultDialogsMessageComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  });\n\n  if (props.currentCorresspondentId) {\n    returnMessages = props.dialogMessages[props.currentCorresspondentId].map(function (el) {\n      return React.createElement(DialogsMessageComponent, {\n        avatar: props.dialogCorrespondents[el.id].avatar,\n        name: props.dialogCorrespondents[el.id].firstName,\n        message: el.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      });\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: 'dialogs-box',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dialogs-titul\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"\\u0414\\u0438\\u0430\\u043B\\u043E\\u0433\\u0438\"), React.createElement(\"div\", {\n    className: \"dialogs-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dialogs-users\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, returnDialogCorrespondents), React.createElement(\"div\", {\n    className: \"dialogs-messages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/dialogs/\".concat(props.currentCorresspondentId),\n    render: function render() {\n      return returnMessages;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/dialogs\",\n    render: function render() {\n      return returnDefaultMessages;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    dialogCorrespondents: state.dialogData.dialogCorrespondents,\n    currentCorresspondentId: state.dialogData.currentCorresspondentId,\n    dialogMessages: state.dialogData.dialogMessages\n  };\n};\n\nvar ConnectedDialogComponent = connect(mapStateToProps)(DialogsComponent);\nexport default ConnectedDialogComponent;","map":{"version":3,"sources":["C:\\lessons\\React\\kmb-11\\src\\Components\\Dialogs\\Dialogs.js"],"names":["React","DialogsListComponent","connect","Route","DialogsMessageComponent","NavLink","DefaultDialogsMessageComponent","DialogsComponent","props","returnDialogCorrespondents","dialogCorrespondents","map","el","id","avatar","firstName","currentCorresspondentId","returnMessages","returnDefaultMessages","dialogMessages","message","mapStateToProps","state","dialogData","ConnectedDialogComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAOC,oBAAP,MAAiC,eAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,QAAoB,cAApB;AACA,OAAOC,uBAAP,MAAoC,kBAApC;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,OAAOC,8BAAP,MAA2C,yBAA3C;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAEhC,MAAIC,0BAA0B,GAAGD,KAAK,CAACE,oBAAN,CAA2BC,GAA3B,CAA+B,UAACC,EAAD,EAAQ;AACpE,QAAGA,EAAE,CAACC,EAAH,KAAU,CAAb,EAAgB;AACZ,aAAQ,oBAAC,OAAD;AAAS,QAAA,EAAE,qBAAcD,EAAE,CAACC,EAAjB,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmC,oBAAC,oBAAD;AAC/B,QAAA,MAAM,EAAED,EAAE,CAACE,MADoB;AACZ,QAAA,IAAI,EAAEF,EAAE,CAACG,SADG;AACQ,QAAA,uBAAuB,EAAEP,KAAK,CAACQ,uBADvC;AACiE,QAAA,eAAe,EAAEJ,EAAE,CAACC,EADrF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnC,CAAR;AAGH;AACJ,GANgC,CAAjC;AAQA,MAAII,cAAc,GAAG,EAArB;AACA,MAAIC,qBAAqB,GAAG,oBAAC,8BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5B;;AACA,MAAGV,KAAK,CAACQ,uBAAT,EAAkC;AAC1BC,IAAAA,cAAc,GAAGT,KAAK,CAACW,cAAN,CAAqBX,KAAK,CAACQ,uBAA3B,EAAoDL,GAApD,CAAwD,UAACC,EAAD,EAAQ;AACjF,aAAQ,oBAAC,uBAAD;AAAyB,QAAA,MAAM,EAAEJ,KAAK,CAACE,oBAAN,CAA2BE,EAAE,CAACC,EAA9B,EAAkCC,MAAnE;AACyB,QAAA,IAAI,EAAEN,KAAK,CAACE,oBAAN,CAA2BE,EAAE,CAACC,EAA9B,EAAkCE,SADjE;AAC4E,QAAA,OAAO,EAAEH,EAAE,CAACQ,OADxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AAEH,KAHoB,CAAjB;AAIP;;AAED,SACI;AAAK,IAAA,SAAS,EAAE,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADJ,EAII;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,0BADL,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,qBAAcD,KAAK,CAACQ,uBAApB,CAAjB;AAAgE,IAAA,MAAM,EAAE;AAAA,aAAMC,cAAN;AAAA,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,YAAjB;AAA+B,IAAA,MAAM,EAAE;AAAA,aAAMC,qBAAN;AAAA,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAJJ,CAJJ,CADJ;AAgBH,CAnCD;;AAqCA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHZ,IAAAA,oBAAoB,EAAEY,KAAK,CAACC,UAAN,CAAiBb,oBADpC;AAEHM,IAAAA,uBAAuB,EAAEM,KAAK,CAACC,UAAN,CAAiBP,uBAFvC;AAGHG,IAAAA,cAAc,EAAEG,KAAK,CAACC,UAAN,CAAiBJ;AAH9B,GAAP;AAKH,CAND;;AAQA,IAAMK,wBAAwB,GAAGtB,OAAO,CAACmB,eAAD,CAAP,CAAyBd,gBAAzB,CAAjC;AAEA,eAAeiB,wBAAf","sourcesContent":["import React from 'react';\nimport './Dialogs.css';\nimport DialogsListComponent from \"./DialogsList\";\nimport {connect} from 'react-redux';\nimport {Route} from \"react-router\";\nimport DialogsMessageComponent from \"./DialogsMessage\";\nimport {NavLink} from \"react-router-dom\";\nimport DefaultDialogsMessageComponent from \"./DefaultDialogsMessage\";\n\nconst DialogsComponent = (props) => {\n\n    let returnDialogCorrespondents = props.dialogCorrespondents.map((el) => {\n        if(el.id !== 0) {\n            return (<NavLink to={`/dialogs/${el.id}`} ><DialogsListComponent\n                        avatar={el.avatar} name={el.firstName} currentCorresspondentId={props.currentCorresspondentId}  correspondentId={el.id} />\n                    </NavLink>)\n        }\n    });\n\n    let returnMessages = '';\n    let returnDefaultMessages = <DefaultDialogsMessageComponent />;\n    if(props.currentCorresspondentId) {\n            returnMessages = props.dialogMessages[props.currentCorresspondentId].map((el) => {\n            return (<DialogsMessageComponent avatar={props.dialogCorrespondents[el.id].avatar}\n                                             name={props.dialogCorrespondents[el.id].firstName} message={el.message}/>);\n        });\n    }\n\n    return (\n        <div className={'dialogs-box'}>\n            <div className=\"dialogs-titul\">\n                Диалоги\n            </div>\n            <div className=\"dialogs-content\">\n                <div className=\"dialogs-users\">\n                    {returnDialogCorrespondents}\n                </div>\n                <div className=\"dialogs-messages\">\n                    <Route exact path={`/dialogs/${props.currentCorresspondentId}`} render={() => returnMessages }/>\n                    <Route exact path={`/dialogs`} render={() => returnDefaultMessages }/>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogCorrespondents: state.dialogData.dialogCorrespondents,\n        currentCorresspondentId: state.dialogData.currentCorresspondentId,\n        dialogMessages: state.dialogData.dialogMessages\n    }\n};\n\nconst ConnectedDialogComponent = connect(mapStateToProps)(DialogsComponent);\n\nexport default ConnectedDialogComponent;"]},"metadata":{},"sourceType":"module"}